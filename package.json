{
  "name": "@ebay/ebayui-core",
  "version": "8.5.0",
  "description": "Collection of core eBay components; considered to be the building blocks for all composite structures, pages & apps.",
  "scripts": {
    "installMarkoV5": "npm i marko@5 --force --no-save",
    "installMarkoV4": "npm i marko@4 --force --no-save",
    "prepublishOnly": "node scripts/prepublish",
    "version": "npm run storybook:build && npm run build:readme && git add -A src docs",
    "postpublish": "node scripts/postpublish",
    "start": "npm run storybook:start",
    "start:prod": "NODE_ENV=production npm start",
    "coverage": "npm run installMarkoV4 && nyc marko-test && node scripts/coverage && npm run installMarkoV5",
    "report": "nyc report --reporter=html",
    "test": "npm run installMarkoV4 && npm run coverage && npm run report && npm run installMarkoV5",
    "test:server": "marko-test --server",
    "test:browser": "marko-test --browser",
    "test:fps": "karma start",
    "test:integration": "mocha integration",
    "test:browserstack": "env $(cat .env | xargs) npm run tb",
    "clean": "rimraf .coverage .karma .nyc_output demo/static && npm run clean:integration",
    "clean:git": "git clean -xdf",
    "clean:integration": "rimraf integration/*.marko.js integration/static",
    "lint": "npm run lint:less && npm run lint:js && npm run lint:whitespace",
    "lint:less": "stylelint '**/**.less'",
    "lint:js": "eslint .",
    "lint:whitespace": "lintspaces *.md src/**/*.md src/**/*.marko 'src/**/!(*.marko).js' src/**/*.less --newline --maxnewlines 1 --trailingspaces --spaces 4",
    "build": "npm run lint && node scripts/check-postpublish && npm test",
    "build:ci": "npm run lint && node scripts/check-postpublish && npm test && npm run build",
    "build:readme": "node scripts/add-ds-version",
    "storybook:build": "DS=6 build-storybook -o ./docs && DS=4 build-storybook -o ./docs/ds4",
    "storybook:start": "start-storybook -p 6006",
    "importSVG": "node scripts/import-svg",
    "ts": "npm run test:server",
    "tb": "npm run test:browser",
    "tf": "npm run test:fps",
    "ti": "npm run test:integration",
    "tr": "npm run coverage && npm run report && open .coverage/index.html",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook",
    "generateCDN": "node scripts/generate-cdn",
    "prepare": "husky install"
  },
  "browserslist": [
    "extends @ebay/browserslist-config"
  ],
  "files": [
    "dist",
    "!*.marko.js",
    "!**/test*",
    "marko.json",
    "package-lock.json",
    "*.browser.json",
    "marketplace.json"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/eBay/ebayui-core"
  },
  "keywords": [
    "marko-components"
  ],
  "devDependencies": {
    "@babel/cli": "^7.14.8",
    "@babel/core": "^7.15.0",
    "@babel/eslint-parser": "^7.5.4",
    "@babel/plugin-transform-runtime": "^7.15.0",
    "@babel/preset-env": "^7.15.0",
    "@babel/preset-react": "^7.14.5",
    "@babel/runtime-corejs3": "^7.15.3",
    "@commitlint/cli": "^16",
    "@commitlint/config-conventional": "^16",
    "@ebay/browserslist-config": "^2.0.2",
    "@ebay/skin": "13.5.0",
    "@lasso/marko-taglib": "^2.0.1",
    "@marko/build": "^4.2.3",
    "@marko/compile": "^4.1.2",
    "@marko/migrate": "^6.0.2",
    "@marko/prettyprint": "^3.0.1",
    "@marko/test": "^8",
    "@marko/testing-library": "^6",
    "@storybook/addon-a11y": "^6.4.18",
    "@storybook/addon-actions": "^6.4.18",
    "@storybook/addon-essentials": "^6.4.18",
    "@storybook/addon-knobs": "^6.3.1",
    "@storybook/addon-links": "^6.4.18",
    "@storybook/addon-storysource": "^6.4.18",
    "@storybook/builder-webpack5": "^6.4.18",
    "@storybook/manager-webpack5": "^6.4.18",
    "@storybook/marko": "~7.3.0",
    "@wdio/browserstack-service": "^7.13.2",
    "arc-webpack": "^2.0.6",
    "async": "^3.2.1",
    "babel-loader": "^8.0.6",
    "browser-refresh": "^1.7.2",
    "chai": "4.3.6",
    "chai-dom": "^1.10.0",
    "chromedriver": "^99",
    "coveralls": "^3.1.1",
    "css-loader": "^6",
    "dotenv-webpack": "^7.0.2",
    "eslint": "^8",
    "eslint-config-ebay": "^1.1.3",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-compat": "^4",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-mocha": "^10.0.0",
    "express": "^4.17.1",
    "highlights": "^3.1.4",
    "html-minifier": "^4.0.0",
    "html-webpack-plugin": "^5.3.2",
    "husky": "^7.0.0",
    "is-travis": "^2.0.0",
    "karma": "^6.3.4",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^3.1.0",
    "karma-lasso": "^5.0.0",
    "karma-mocha": "^2.0.1",
    "lasso": "^3.4.3",
    "lasso-babel-transform": "^3.0.1",
    "lasso-less": "^4.0.1",
    "lasso-marko": "^3.1.1",
    "less": "^4.1.0",
    "less-loader": "^10",
    "lint-staged": "^12.1.2",
    "lintspaces-cli": "^0.7.1",
    "marko": "^5",
    "mocha": "^9.1.2",
    "mocha-snap": "^4.3.0",
    "nyc": "^15.1.0",
    "open-cli": "^7.0.1",
    "postcss-less": "^6.0.0",
    "pre-push": "^0.1.1",
    "prettier": "^2.4.1",
    "raw-loader": "^4.0.2",
    "rimraf": "^3.0.2",
    "shaka-player": "^3.2.2",
    "sinon": "^13.0.1",
    "storybook-readme": "^5.0.9",
    "style-loader": "^3",
    "stylelint": "^14.1.0",
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-config-standard": "^25.0.0",
    "stylelint-prettier": "^2",
    "supertest": "^6.1.6",
    "wdio-chromedriver-service": "^7.2.2"
  },
  "peerDependencies": {
    "@ebay/skin": "13.5.0",
    "marko": "^4 || ^5"
  },
  "dependencies": {
    "@marko-tags/subscribe": "^0.4.2",
    "makeup-active-descendant": "0.5.1",
    "makeup-expander": "~0.10.0",
    "makeup-floating-label": "~0.3.0",
    "makeup-focusables": "~0.3.0",
    "makeup-key-emitter": "~0.3.0",
    "makeup-keyboard-trap": "~0.4.1",
    "makeup-prevent-scroll-keys": "~0.2.0",
    "makeup-roving-tabindex": "~0.5.1",
    "makeup-screenreader-trap": "~0.4.1",
    "makeup-typeahead": "^0.2.0"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "commitlint": {
    "extends": "@commitlint/config-conventional"
  },
  "lint-staged": {
    "*.{js,css,md,less,json}": "prettier --write"
  }
}

{
  "name": "@ebay/ebayui-core",
  "version": "7.3.0-1",
  "description": "Collection of core eBay components; considered to be the building blocks for all composite structures, pages & apps.",
  "scripts": {
    "installMarkoV5": "node scripts/install-no-save marko@latest -D",
    "installMarkoV4": "npm run --frozen-lockfile # reinstall according to package.json/package-lock.json",
    "prepublishOnly": "node scripts/prepublish",
    "version": "npm run storybook:build && npm run build:readme && git add -A src docs",
    "postpublish": "node scripts/postpublish",
    "start": "npm run clean; browser-refresh demo/",
    "start:prod": "NODE_ENV=production npm start",
    "coverage": "nyc marko-test && node scripts/coverage",
    "report": "nyc report --reporter=html",
    "test": "npm run coverage && npm run report",
    "test:server": "marko-test --server",
    "test:browser": "marko-test --browser",
    "test:fps": "karma start",
    "test:integration": "mocha integration",
    "test:browserstack": "env $(cat .env | xargs) npm run tb",
    "clean": "rimraf .coverage .karma .nyc_output demo/static && npm run clean:integration",
    "clean:git": "git clean -xdf",
    "clean:integration": "rimraf integration/*.marko.js integration/static",
    "lint": "npm run lint:less && npm run lint:js && npm run lint:whitespace",
    "lint:less": "stylelint '**/**.less'",
    "lint:js": "eslint .",
    "lint:whitespace": "lintspaces *.md src/**/*.md src/**/*.marko 'src/**/!(*.marko).js' src/**/*.less --newline --maxnewlines 1 --trailingspaces --spaces 4",
    "build": "npm run lint && node scripts/check-postpublish && npm test",
    "build:ci": "npm run lint && node scripts/check-postpublish && npm test && npm run build",
    "build:readme": "node scripts/add-ds-version",
    "storybook:build": "DS=6 build-storybook -s demo/assets -o ./docs && DS=4 build-storybook -s demo/assets  -o ./docs/ds4",
    "storybook:start": "start-storybook -s demo/assets -p 6006",
    "importSVG": "node scripts/import-svg",
    "ts": "npm run test:server",
    "tb": "npm run test:browser",
    "tf": "npm run test:fps",
    "ti": "npm run test:integration",
    "tr": "npm run coverage && npm run report && open .coverage/index.html",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook",
    "generateCDN": "node scripts/generate-cdn"
  },
  "browserslist": [
    "extends @ebay/browserslist-config"
  ],
  "files": [
    "dist",
    "!*.marko.js",
    "!**/test*",
    "marko.json",
    "package-lock.json",
    "*.browser.json",
    "marketplace.json"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/eBay/ebayui-core"
  },
  "keywords": [
    "marko-components"
  ],
  "devDependencies": {
    "@babel/cli": "^7.12.1",
    "@babel/core": "^7.13.8",
    "@babel/plugin-transform-runtime": "^7.13.9",
    "@babel/preset-env": "^7.13.9",
    "@babel/preset-react": "^7.12.1",
    "@babel/runtime-corejs3": "^7.13.9",
    "@ebay/browserslist-config": "^1.1.0",
    "@ebay/skin": "12.3.0-1",
    "@lasso/marko-taglib": "^2.0.1",
    "@marko/build": "^4.1.1",
    "@marko/compile": "^4.1.2",
    "@marko/migrate": "^6.0.0",
    "@marko/prettyprint": "^3.0.0",
    "@marko/test": "^8.0.5",
    "@marko/testing-library": "^4.0.3",
    "@storybook/addon-actions": "^6.1.21",
    "@storybook/addon-essentials": "^6.1.21",
    "@storybook/addon-knobs": "^6.1.21",
    "@storybook/addon-links": "^6.1.21",
    "@storybook/addon-storysource": "^6.1.21",
    "@storybook/marko": "^6.1.21",
    "@wdio/browserstack-service": "^7.0.9",
    "async": "^3.2.0",
    "babel-loader": "^8.0.6",
    "browser-refresh": "^1.7.2",
    "chai": "^4.2.0",
    "chai-dom": "^1.8.1",
    "chromedriver": "^88.0.0",
    "core-js": "^3.9.1",
    "coveralls": "^3.1.0",
    "css-loader": "^5.1.3",
    "dashjs": "^3.2.0",
    "eslint": "^7.21.0",
    "eslint-config-ebay": "^1.1.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-compat": "^3.7.0",
    "eslint-plugin-import": "^2.21.2",
    "eslint-plugin-mocha": "^8.0.0",
    "express": "^4.17.1",
    "highlights": "^3.1.4",
    "html-minifier": "^4.0.0",
    "husky": "^5.1.2",
    "is-travis": "^2.0.0",
    "karma": "^6.0.2",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^3.1.0",
    "karma-lasso": "^4.0.0",
    "karma-mocha": "^2.0.1",
    "lasso": "^3.4.2",
    "lasso-babel-transform": "^3.0.0",
    "lasso-less": "^4.0.0",
    "lasso-marko": "^3.0.1",
    "less": "^4.1.0",
    "less-loader": "^7.3.0",
    "lint-staged": "^10.5.4",
    "lintspaces-cli": "^0.7.1",
    "marko": "^4.23.10",
    "mocha": "^8.2.0",
    "nyc": "^15.1.0",
    "open-cli": "^6.0.1",
    "pre-push": "^0.1.1",
    "prettier": "^2.2.1",
    "rimraf": "^3.0.2",
    "shaka-player": "^3.0.10",
    "sinon": "^9.2.4",
    "storybook-readme": "^5.0.8",
    "style-loader": "^2.0.0",
    "stylelint": "^13.6.1",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^20.0.0",
    "stylelint-prettier": "^1.2.0",
    "supertest": "^6.1.3",
    "webpack-plugin-browser-json": "^1.1.3"
  },
  "peerDependencies": {
    "@ebay/skin": "12.3.0-1",
    "marko": "^4 || ^5"
  },
  "dependencies": {
    "@marko-tags/subscribe": "^0.4.2",
    "core-js-pure": "^3.9.1",
    "makeup-active-descendant": "0.3.9",
    "makeup-expander": "~0.8.6",
    "makeup-floating-label": "~0.1.2",
    "makeup-focusables": "~0.1.0",
    "makeup-key-emitter": "~0.1.3",
    "makeup-keyboard-trap": "~0.2.6",
    "makeup-prevent-scroll-keys": "~0.0.4",
    "makeup-roving-tabindex": "~0.3.7",
    "makeup-screenreader-trap": "~0.2.1",
    "makeup-typeahead": "^0.0.2",
    "nodelist-foreach-polyfill": "^1.2.0"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "browser": {
    "src/components/ebay-progress-stepper/examples/04-other/02-interactive/template.js": "src/components/ebay-progress-stepper/examples/04-other/02-interactive/template.browser.js"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run lint && npm test"
    }
  },
  "lint-staged": {
    "*.{js,css,md,less,json}": "prettier --write"
  }
}

import { processHtmlAttributes } from '../../common/html-attributes';
import DotsIcon from '<ebay-overflow-horizontal-24-icon>';
import type { Item } from './component';
static var disabledItem: Item = { disabled: true };
static var ignoredAttributes = ['items'];
static var ignoredItemAttributes = ['current', 'disabled'];
static function isItemHidden(index: number, range: {start: number, end: number, dotsIndex: number, leadingDotsIndex: number}) {
    return (index < range.start || index > range.end) && (range.dotsIndex !== index && range.leadingDotsIndex - 1 !== index);
}
$ var baseItems = (input.items as Item[]) || [];
$ var lastItemIndex = baseItems.length - 1;
$ var prevItem = (baseItems[0] && baseItems[0].type === 'previous' && baseItems[0]) || disabledItem;
$ {
    var nextItem =
        (baseItems[lastItemIndex] &&
            baseItems[lastItemIndex].type === 'next' &&
            baseItems[lastItemIndex]) ||
        disabledItem;
    var items = baseItems.slice(
        prevItem === disabledItem ? 0 : 1,
        nextItem === disabledItem ? undefined : lastItemIndex
    );
}
$ var range = component._getVisibleRange(items);

<nav
    ...processHtmlAttributes(input, ignoredAttributes)
    role='navigation'
    class=['pagination', input.class]
    key="root"
    aria-labelledby:scoped='heading'
>
    <span aria-live='polite' role='status'>
        <h2.clipped id:scoped='heading'>
            ${input.a11yCurrentText || 'Results Pagination - Page 1'}
        </h2>
    </span>

    <${component.getItemTag(prevItem)}
        ...processHtmlAttributes(prevItem, ignoredItemAttributes)
        class=['pagination__previous', prevItem.href ? 'icon-link' : 'icon-btn', prevItem.class]
        aria-disabled=prevItem.disabled && 'true'
        aria-label=input.a11yPreviousText || 'Previous page'
        style=[prevItem.style, { minWidth: 40 }]
        onClick('handlePreviousPageClick')
    >
        <ebay-arrow-left-16-icon/>
    </>

    <ol.pagination__items key='items'>
        <for|item, i| of=items>
            <if(range.dotsIndex === i || range.leadingDotsIndex === i)>
                $ {
                    var hideDots = range.hideDots;
                    var isLeading = false;

                    if (range.leadingDotsIndex === i) {
                        isLeading = true;
                        hideDots = !!range.hideLeadingDots;
                    }
                }
                <li hidden=hideDots>
                    <if(range.hasOverflow)>
                        <span class=['pagination__item', item.class] role='separator'>
                            <ebay-fake-menu-button
                                variant='icon'
                                transparent
                                icon=DotsIcon
                                collapseOnSelect
                                on-select('handleMenuPageNumber')
                            >
                                <for|item, j| of=items>
                                    $ var visible = isLeading ? j < range.start : j > range.end;
                                    <if(isItemHidden(j, range) && visible)>
                                        <@item
                                            ...processHtmlAttributes(item, ignoredItemAttributes)
                                            type=component.getItemTag(item) as (Marko.Input<"button">["type"])
                                            data-page-number=j
                                        >
                                            <${item.renderBody}/>
                                        </@item>
                                    </if>
                                </for>
                            </>
                        </span>
                    </if>
                    <else>
                        <span class=['pagination__item', item.class] role='separator'>
                            <ebay-overflow-horizontal-24-icon/>
                        </span>
                    </else>
                </li>
            </if>
            <li hidden=isItemHidden(i, range)>
                <${component.getItemTag(item)}
                    ...processHtmlAttributes(item, ignoredItemAttributes)
                    key="pageItem[]"
                    class=['pagination__item', item.class]
                    aria-current=item.current && 'page'
                    onClick('handlePageNumberClick', i)
                >
                    <${item.renderBody}/>
                </>
            </li>
        </for>
    </ol>

    <${component.getItemTag(nextItem)}
        ...processHtmlAttributes(nextItem, ignoredItemAttributes)
        class=['pagination__next', nextItem.href ? 'icon-link' : 'icon-btn', nextItem.class]
        aria-disabled=nextItem.disabled && 'true'
        aria-label=input.a11yNextText || 'Next page'
        style=[nextItem.style, { minWidth: 40 }]
        onClick('handleNextPageClick')
    >
        <ebay-arrow-right-16-icon/>
    </>
</nav>

class {
    onCreate() {
        this.state = {
            count: 2,
            checked: [false, true, true, false],
            cachedChecked: [false, true, true, false],
            cacheCount: 2
        };
    }

    handleChange(index, { checked }) {
        this.state.checked[index] = checked;
        this.state.cachedChecked = [...this.state.checked];
        this.state.count += checked ? 1 : -1;
        this.state.cacheCount = this.state.count;
    }
    handleParentChange({ checked }) {
        let count;
        if (checked === "true") {
            this.state.checked.fill(true);
            count = this.state.checked.length;
        } else if (checked === "mixed") {
            this.state.checked = [...this.state.cachedChecked];
            count = this.state.cacheCount;
        } else {
            this.state.checked.fill(false);
            count = 0;
        }
        this.state.count = count;
    }

    get checked() {
        return this.state.count === 0
            ? "false"
            : this.state.count === this.state.checked.length
            ? "true"
            : "mixed";
    }
    get skipMixed() {
        const cacheCount = this.state.cacheCount;
        return cacheCount === 0 || cacheCount === this.state.checked.length;
    }
}

<div class="field">
    <ebay-tri-state-checkbox
        skip-mixed=component.skipMixed
        checked=component.checked
        id:scoped="checkbox-all"
        on-change("handleParentChange")/>
    <label class="field__label field__label--end" for:scoped="checkbox-all">
        Select all
    </label>
</div>
<div class="container" style="margin-left: 10px;">
    <for|checked, index| of=state.checked>
        <div class="field">
            <ebay-checkbox
                id:scoped=`checkbox-${index}`
                checked=checked
                on-change("handleChange", index)/>
            <label class="field__label field__label--end" for:scoped=`checkbox-${index}`>
                Option ${index}
            </label>
        </div>
    </for>
</div>

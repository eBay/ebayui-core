import processHtmlAttributes from "../../common/html-attributes"

static var ignoredAttributes = [
    "open"
];

class {
    clearAllTimeouts() {
        while(this.timeouts.length) {
            clearTimeout(this.timeouts.pop());
        }
    }

    onInput(input) {
        this.clearAllTimeouts();
        this.state = {open: input.open || this.state.open || false}
        if (input.open !== false) {
            this.timeouts.push(setTimeout(() => {
                this.emit("close");
                this.state.open = false;
            }, input.timeout || this.DEFAULT_TIMEOUT_LENGTH));
        }
    }
    onDestroy() {
        this.clearAllTimeouts();
    }

    onCreate() {
        this.DEFAULT_TIMEOUT_LENGTH = 6000;
        this.eventSet = new Set();
        this.state = {open: false};
        this.timeouts = [];
    }

    handleAction() {
        this.clearAllTimeouts();
        this.emit('action');
        this.state.open = false;
    }

    handleFocus() {
        this.clearAllTimeouts();
        this.eventSet.add("focus");
    }

    handleBlur() {
        this.eventSet.delete("focus");
        if (this.eventSet.size === 0) {
            this.timeouts.push(setTimeout(() => {
                this.emit("close");
                this.state.open = false;
            }, this.DEFAULT_TIMEOUT_LENGTH));
        }
    }

    handleMouseEnter() {
        this.clearAllTimeouts();
        this.eventSet.add("mouseOver");
    }

    handleMouseLeave() {
        this.eventSet.delete("mouseOver");
        if (this.eventSet.size === 0 && this.state.open === true) {
            this.timeouts.push(setTimeout(() => {
                this.emit("close");
                this.state.open = false;
            }, this.DEFAULT_TIMEOUT_LENGTH));
        }
    }
}

<ebay-dialog-base
    onMouseEnter("handleMouseEnter")
    onMouseLeave("handleMouseLeave")
    ...processHtmlAttributes(input, ignoredAttributes)
    open=state.open
    isModal=false
    classPrefix="snackbar-dialog"
    class=[input.class, "snackbar-dialog--transition"]
    windowClass=[input.layout === "column" && "snackbar-dialog__window--column"]
    buttonPosition="hidden">
    <${input.renderBody}/>
    <if(input.action)>
        <@action>
            <ebay-button
                ...input.action
                variant="fake-link"
                on-click("handleAction")
                on-focus("handleFocus")
                on-blur("handleBlur")>
                <${input.action.renderBody}/>
                <span class="clipped">- Access Key: ${input.action.accessKey}</span>
            </ebay-button>
        </@action>
    </if>
</ebay-dialog-base>

import { processHtmlAttributes } from "../../common/html-attributes"

static interface CheckboxInput extends Omit<Marko.Input<'input'>, `on${string}` | 'type'> {
    toJSON?: any;
    "icon-style"?: "rounded" | "square";
    "on-change"?: () => void;
    "on-focus"?: () => void;
    "on-keydown"?: () => void;
}

export interface Input extends WithNormalizedProps<CheckboxInput> {}

static function noop() {}
static var ignoredAttributes = ["class", "style", "size", "toJSON", "iconStyle"];

$ input.toJSON = noop;

<span class=["checkbox", input.class] style=input.style>
    <input
        ...processHtmlAttributes(input, ignoredAttributes)
        class="checkbox__control"
        type="checkbox"
        onClick("handleChange")
        onFocus("handleFocus")
        onKeyDown("handleKeydown")/>
    <span class="checkbox__icon" hidden>
        <if (input.size === 'large')>
            <ebay-checkbox-unchecked-24-icon
                class="checkbox__unchecked"
                focusable="false"
                no-skin-classes/>
            <ebay-checkbox-checked-24-icon
                class="checkbox__checked"
                focusable="false"
                no-skin-classes/>
        </if>
        <else>
            <ebay-checkbox-unchecked-18-icon
                class="checkbox__unchecked"
                focusable="false"
                no-skin-classes/>
            <ebay-checkbox-checked-18-icon
                class="checkbox__checked"
                focusable="false"
                no-skin-classes/>
        </else>
    </span>
</span>

import type { FileInputEvent } from "../component-browser";

static async function mockFetch() {
    await new Promise((resolve) => setTimeout(resolve, Math.random() * 5000));
    return `https://fakeurl.com/${Math.random().toString(36).substring(7)}`;
}

class {
    declare state: {
        files: [File, string | undefined][];
    };

    onCreate() {
        this.state = {
            files: [],
        };
    }

    handleInput({ files }: FileInputEvent) {
        const fileList = Array.from(files);
        this.state.files = this.state.files.concat(fileList.map((file) => [file, undefined]));
        for (const file of fileList) {
            mockFetch().then((url) => {
                const index = this.state.files.findIndex(([f]) => f === file);
                this.state.files = [
                    ...this.state.files.slice(0, index),
                    [file, url],
                    ...this.state.files.slice(index + 1)
                ];
            })
        }
    }

    handleDelete(index: number) {
        this.state.files = [
            ...this.state.files.slice(0, index),
            ...this.state.files.slice(index + 1)
        ];
    }
}
<ebay-file-input multiple on-input("handleInput") ...input>
    <@header class="subtitleClass" id="subtitleId">
        <p>Multiple files</p>
    </@header>
    <span>Browse files</span>
</ebay-file-input>

<ebay-file-preview-card-group on-delete("handleDelete") on-cancel("handleDelete")>
    <for|[file, url]| of=state.files>
        <@card file=file status=url ? undefined : "uploading"/>
    </for>
</ebay-file-preview-card-group>

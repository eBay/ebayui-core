import { processHtmlAttributes } from "../../common/html-attributes"
import type { Option } from "./component";

$ const {
    name,
    class: inputClass,
    disabled,
    options,
    tabindex = 0,
    ...htmlInput
} = input;

$ var selectedOption = (options as Option[])?.[state.selectedIndex];

<div
    ...processHtmlAttributes(htmlInput)
    key="options"
    role="listbox"
    class=["listbox__options", inputClass]
    tabindex:no-update=tabindex
    on-activeDescendantChange(component.isAutoSelection ? "handleListboxChange" : undefined)
    onKeydown(!component.isAutoSelection && "handleKeyDown")>
    <for|option,index| of=(options || [])>
        $ const {
            value,
            class: optionClass,
            text,
            selected,
            disabled,
            tabindex,
            description,
            ...htmlOption
        } = option;
        <div
            ...processHtmlAttributes(htmlOption)
            key="option[]"
            class:no-update=["listbox__option", optionClass]
            role="option"
            tabindex=(disabled ? -1 : tabindex)
            aria-disabled=(disabled && "true")
            aria-selected=(selectedOption === option && "true")
            onClick(!component.isAutoSelection && "handleClick", index)
            onMousedown(component.isAutoSelection && "handleMouseDown")>
            <span class="listbox__value">${text}</span>
            <if (description)>
                <span class="listbox__description"><${description}/></span>
            </if>
            <ebay-tick-16-icon/>
        </div>
    </for>
</div>
<select hidden class="listbox__native" name=name>
    <for|option| of=(options || [])>
        <option
            value=option.value
            selected=(option === selectedOption)
            class=option.class/>
    </for>
</select>

import { processHtmlAttributes } from "../../common/html-attributes"
import type { Option } from "./component";

static var ignoredAttributes = [
    "name",
    "grow",
    "borderless",
    "disabled",
    "fluid",
    "invalid",
    "buttonName",
    "options"
];

static var itemIgnoredAttributes = ["value", "text", "selected", "disabled", "description"];

$ var selectedOption = (input.options as Option[])?.[state.selectedIndex];
<div
    ...processHtmlAttributes(input, ignoredAttributes)
    key="options"
    role="listbox"
    class=["listbox__options", input.class]
    tabindex:no-update=(input.tabindex || 0)
    on-activeDescendantChange(component.isAutoSelection ? "handleListboxChange" : undefined)
    onKeydown(!component.isAutoSelection && "handleKeyDown")>
    <for|option,index| of=(input.options || [])>
        <div
            ...processHtmlAttributes(option, itemIgnoredAttributes)
            key="option[]"
            class:no-update=["listbox__option", option.class]
            role="option"
            tabindex=(option.disabled ? -1 : option.tabindex)
            aria-disabled=(option.disabled && "true")
            aria-selected=(selectedOption === option && "true")
            onClick(!component.isAutoSelection && "handleClick", index)
            onMousedown(component.isAutoSelection && "handleMouseDown")>
            <span class="listbox__value">${option.text}</span>
            <if (option.description)>
                <span class="listbox__description"><${option.description}/></span>
            </if>
            <ebay-tick-16-icon/>
        </div>
    </for>
</div>
<select hidden class="listbox__native" name=input.name>
    <for|option| of=(input.options || [])>
        <option
            value=option.value
            selected=(option === selectedOption)
            class=option.class/>
    </for>
</select>

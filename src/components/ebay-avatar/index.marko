import { processHtmlAttributes } from "../../common/html-attributes";
import { getColorForText } from "./util";

static type Size = 32 | 40 | 48 | 56 | 64 | 96 | 128;

static interface AvatarInput extends Omit<Marko.Input<"div">, `on${string}`> {
    username?: string;
    color?: string;
    "a11y-text"?: string;
    size?: Size | `${Size}`;
    img?: Marko.AttrTag<Omit<Marko.Input<"img">, `on${string}`>>;
}

export interface Input extends WithNormalizedProps<AvatarInput> {}

$ const {
    a11yText,
    class: inputClass,
    size,
    color,
    img,
    username,
    renderBody,
    ...htmlInput
} = input

<div
    ...processHtmlAttributes(htmlInput)
    role="img"
    aria-label=a11yText
    class=[
        "avatar",
        inputClass,
        size && `avatar--${size}`,
        `avatar--${getColorForText(username, color)}`,
    ]
>
    <if(img)>
        <img ...img>
    </if>

    <else-if(renderBody)>
        <${input}/>
    </else-if>
    <else-if(username)>
        ${username.charAt(0).toUpperCase()}
    </else-if>

    <else>
        <ebay-avatar-signed-out-icon/>
    </else>
</div>

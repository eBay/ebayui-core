import { processHtmlAttributes } from "../../common/html-attributes";
import { getColorForText } from "./util";

static type Size = 32 | 40 | 48 | 56 | 64 | 96 | 128;

static interface AvatarInput extends Omit<Marko.Input<"div">, `on${string}`> {
    username?: string;
    color?: string;
    "a11y-text"?: string;
    size?: Size | `${Size}`;
    img?: Marko.AttrTag<Omit<Marko.Input<"img">, `on${string}`>>;
}

export interface Input extends WithNormalizedProps<AvatarInput> {}

static {
    var ignoredAttributes = [
        "a11yText",
        "class",
        "size",
        "color",
        "img",
        "username",
    ];
}
$ var color = getColorForText(input.username, input.color);

<div
    ...processHtmlAttributes(input, ignoredAttributes)
    role="img"
    aria-label=input.a11yText
    class=[
        "avatar",
        input.class,
        input.size && `avatar--${input.size}`,
        `avatar--${color}`,
    ]
>
    <if(input.img)>
        <img ...input.img>
    </if>

    <else-if(input.renderBody)>
        <${input}/>
    </else-if>
    <else-if(input.username)>
        ${input.username.charAt(0).toUpperCase()}
    </else-if>

    <else>
        <ebay-avatar-signed-out-icon/>
    </else>
</div>

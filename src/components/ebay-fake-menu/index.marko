import { processHtmlAttributes } from "../../common/html-attributes"

static {
    var ignoredAttributes = [
        "class",
        "style",
        "classPrefix",
        "type",
        "reverse",
        "fixWidth",
        "items"
    ];
    var itemIgnoredAttributes = [
        "class",
        "style",
        "type",
        "value",
        "checked",
        "current",
        "badgeNumber",
        "badgeAriaLabel",
        "disabled"
    ];
}

$ var baseClass = input.classPrefix || "fake-menu";
$ var separatorMap = component.getSeparatorMap(input);
<span
    ...processHtmlAttributes(input, ignoredAttributes)
    class=[
        input.classPrefix
            ? `${baseClass}__menu`
            : "fake-menu",
        input.reverse && `${baseClass}__menu--reverse`,
        input.fixWidth && `${baseClass}__menu--fix-width`,
        input.class
    ]
    style=input.style>
    <ul
        class=`fake-menu__items`
        key="menu"
        tabindex="-1"
        id:scoped="menu">
        <for|item, index| of=(component.items)>
            $ var isDisabled = !item.href || item.disabled;
            $ var defaultAriaCurrent = item.itemMatchesUrl === false ? 'true' : 'page';
            <if (separatorMap[index])>
                <li>
                    <hr class=`${baseClass}__separator` role="separator" />
                </li>
            </if>
            <li>
                $ var isButton = item.type === "button" || item.type ==="submit";
                <${isButton ? "button" : "a"}
                    ...processHtmlAttributes(item, itemIgnoredAttributes)
                    class=[`${baseClass}__item`, item.class]
                    style=item.style
                    disabled=(isButton && item.disabled)
                    aria-disabled=(!isButton && item.disabled && 'true')
                    aria-current=(item.current ? defaultAriaCurrent : false)
                    href=(item.disabled ? null : item.href)
                    type=(isButton && item.type)
                    onKeydown(!item.disabled && "handleItemKeydown", index)
                    onClick(!item.disabled && "handleItemClick", index)
                    key="item[]">
                    <span>
                        <${item.renderBody}/>
                    </span>
                    <if(item.badgeNumber)>
                        <ebay-badge type="menu" number=item.badgeNumber/>
                    </if>

                    <ebay-tick-small-icon />
                </>
            </li>
        </for>
    </ul>
</span>

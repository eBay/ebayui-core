import { processHtmlAttributes } from "../../common/html-attributes"

$ const {
    class: inputClass,
    style,
    classPrefix,
    type,
    reverse,
    fixWidth,
    items,
    ...htmlInput
} = input;

$ var baseClass = classPrefix || "fake-menu";
$ var separatorMap = component.getSeparatorMap(input);

<span
    ...processHtmlAttributes(htmlInput)
    class=[
        classPrefix
            ? `${baseClass}__menu`
            : "fake-menu",
        reverse && `${baseClass}__menu--reverse`,
        fixWidth && `${baseClass}__menu--fix-width`,
        inputClass
    ]
    style=style>
    <ul
        class=`fake-menu__items`
        key="menu"
        tabindex="-1"
        id:scoped="menu">
        <for|item, index| of=(component.items)>
            $ const {
                class: itemClass,
                style,
                type,
                value,
                checked,
                current,
                badgeNumber,
                itemMatchesUrl,
                href,
                renderBody,
                disabled,
                ...htmlItem
            } = item;
            $ var defaultAriaCurrent = itemMatchesUrl === false ? 'true' : 'page';
            <if (separatorMap[index])>
                <li>
                    <hr class=`${baseClass}__separator` role="separator" />
                </li>
            </if>
            <li>
                $ var isButton = type === "button" || type ==="submit";
                <${isButton ? "button" : "a"}
                    ...processHtmlAttributes(htmlItem)
                    class=[`${baseClass}__item`, itemClass]
                    style=style
                    disabled=(isButton && disabled)
                    aria-disabled=(!isButton && disabled && 'true')
                    aria-current=(current ? defaultAriaCurrent : false)
                    href=(disabled ? null : href)
                    type=(isButton && type)
                    onKeydown(!disabled && "handleItemKeydown", index)
                    onClick(!disabled && "handleItemClick", index)
                    key="item[]">
                    <span>
                        <${renderBody}/>
                    </span>
                    <if(badgeNumber)>
                        <ebay-badge type="menu" number=badgeNumber/>
                    </if>

                    <ebay-tick-16-icon />
                </>
            </li>
        </for>
    </ul>
</span>

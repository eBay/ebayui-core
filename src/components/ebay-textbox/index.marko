import { processHtmlAttributes } from "../../common/html-attributes"

static function toJSON(this: any) {
    return {
        floatingLabel: this.floatingLabel
    };
}

$ const {
    buttonAriaLabel,
    class: inputClass,
    disabled,
    floatingLabel,
    floatingLabelStatic,
    fluid,
    id = component.getElId("textbox"),
    inputSize,
    invalid,
    multiline,
    opaqueLabel,
    postfixIcon,
    prefixIcon,
    style,
    type,
    value,
    prefixText,
    postfixText,
    ...htmlInput
} = input;

$ (input as any).toJSON = toJSON;
$ var isPostfix = !!postfixIcon;
$ var hasIcon = prefixIcon || isPostfix;
$ var isLarge = inputSize === "large";
$ var displayIcon = Boolean(!multiline && hasIcon);
$ var prefixId = prefixText && component.getElId("prefix");
$ var postfixId = postfixText && component.getElId("postfix");
$ var defaultTag = fluid ? "div" : "span";

<${floatingLabel && defaultTag} class=["floating-label", isLarge && "floating-label--large", opaqueLabel && "floating-label--opaque"]>
    <if(floatingLabel)>
        <label
            for=id
            class=[
                "floating-label__label",
                disabled && "floating-label__label--disabled"
            ]>
            ${floatingLabel}
        </label>
    </if>
    <${defaultTag}
        style=style
        class=["textbox", inputClass, isLarge && "textbox--large", fluid && "textbox--fluid"]>
        <if(displayIcon && prefixIcon)>
            <${prefixIcon}/>
        </if>
        <if(prefixText)>
            <span id=prefixId ...prefixText>
                <${prefixText} />
            </span>
        </if>
        <${multiline ? "textarea" : "input"}
            aria-describedby=[prefixId, postfixId].filter(Boolean).join(" ")
            ...processHtmlAttributes(htmlInput)
            id=id
            key="input"
            class="textbox__control"
            type=(!multiline && (type || "text"))
            value=(!multiline && value)
            disabled=disabled
            aria-invalid=(invalid && "true")
            onKeydown("forwardEvent", "keydown")
            onKeypress("forwardEvent", "keypress")
            onKeyup("forwardEvent", "keyup")
            onChange("forwardEvent", "change")
            onInput("forwardEvent", "input-change")
            onFocus("forwardEvent", "focus")
            onBlur("forwardEvent", "blur")
            onInvalid("forwardEvent", "invalid")>
            <if(multiline && value)>${value}</if>
        </>
        <if(postfixText)>
            <span id=postfixId ...postfixText>
                <${postfixText} />
            </span>
        </if>
        <if(displayIcon && postfixIcon)>
            <${buttonAriaLabel && "button"}
                class="icon-btn icon-btn--transparent"
                aria-label=buttonAriaLabel
                type=(buttonAriaLabel && "button")
                disabled=disabled
                on-click("forwardEvent", "button-click")>
                <${postfixIcon}/>
            </>
        </if>
    </>
</>

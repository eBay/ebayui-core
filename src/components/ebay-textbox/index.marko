import processHtmlAttributes from "../../common/html-attributes"

static var ignoredAttributes = [
    "class",
    "style",
    "invalid",
    "fluid",
    "multiline",
    "icon",
    "iconPosition",
    "iconTag",
    "floatingLabel"
];

$ var isPostfixIcon = input.iconPosition === "postfix" ;
$ var displayIcon = Boolean(!input.multiline && input.iconTag);
$ var id = input.id || component.getElId("textbox");

<${input.fluid ? "div" : "span"}
    style=input.style
    class=[
        "textbox",
        input.class,
        displayIcon && isPostfixIcon && "textbox--icon-end"
    ]>
    <if(input.floatingLabel)>
        <label
            for=id
            class=[
                "floating-label__label",
                input.disabled && "floating-label__label--disabled"
            ]>
            ${input.floatingLabel}
        </label>
    </if>

    <if(displayIcon && !isPostfixIcon)>
        <${input.iconTag}/>
    </if>

    <${input.multiline ? "textarea" : "input"}
        ...processHtmlAttributes(input, ignoredAttributes)
        id=id
        class=[
            "textbox__control",
            input.fluid && "textbox__control--fluid",
            input.floatingLabel && "textbox__control--underline"
        ]
        type=(input.type === "password" ? "password" : "text")
        value=(!input.multiline && input.value)
        aria-invalid=(input.invalid && "true")
        onKeydown("handleKeydown")
        onKeypress("handleKeypress")
        onKeyup("handleKeyup")
        onChange("handleChange")
        onInput("handleInput")
        onFocus("handleFocus")
        onBlur("handleBlur")>
        <if(input.multiline && input.value)>${input.value}</if>
    </>

    <if(displayIcon && isPostfixIcon)>
        <${input.iconTag}/>
    </if>
</>

import { processHtmlAttributes } from "../../common/html-attributes"

static {
    var ignoredAttributes = [
        "class",
        "style",
        "classPrefix",
        "type",
        "reverse",
        "fixWidth",
        "items"
    ];
    var itemIgnoredAttributes = [
        "class",
        "style",
        "value",
        "checked",
        "badgeNumber",
        "badgeAriaLabel"
    ];
}

$ var isRadio = input.type === "radio";
$ var isCheckbox = input.type === "checkbox";
$ var isNotCheckable = input.type !== "checkbox" && input.type !== "radio";
$ var baseClass = input.classPrefix || "menu";
$ var separatorMap = component.getSeparatorMap(input);
<span
    ...processHtmlAttributes(input, ignoredAttributes)
    class=[
        input.classPrefix
            ? `${baseClass}__menu`
            : "menu",
        input.reverse && `${baseClass}__menu--reverse`,
        input.fixWidth && `${baseClass}__menu--fix-width`,
        input.class
    ]
    style=input.style>
    <div
        role="menu"
        class=`${baseClass}__items`
        key="menu"
        id:scoped="menu">
        <for|item, index| of=(component.items)>
            $ {
                var itemRole = isRadio
                                ? "menuitemradio"
                                : isCheckbox
                                ? "menuitemcheckbox"
                                : "menuitem";
                var checked = component.isChecked(index);
            }
            <if (separatorMap[index])>
                <hr class=`${baseClass}__separator` role="separator" />
            </if>
            <div
                ...processHtmlAttributes(item, itemIgnoredAttributes)
                class=[`${baseClass}__item`, item.class, item.badgeNumber && `${baseClass}__item--badged`]
                style=item.style
                aria-checked=(!isNotCheckable && (checked ? "true" : "false"))
                aria-disabled=(item.disabled && "true")
                href=(item.disabled ? null : item.href)
                role=itemRole
                onClick(!item.disabled && "handleItemClick", index)
                onKeydown(!item.disabled && "handleItemKeydown", index)
                onKeypress(!item.disabled && "handleItemKeypress")
                key="item[]">
                <span>
                    <${item.renderBody}/>
                    <if(item.badgeNumber)>
                        <ebay-badge type="menu" number=item.badgeNumber/>
                    </if>
                </span>
                <ebay-tick-small-icon />
            </div>
        </for>
    </div>
</span>

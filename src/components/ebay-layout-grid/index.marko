import { processHtmlAttributes } from "../../common/html-attributes";
import type { WithNormalizedProps } from '../../global';

export interface LayoutOptions  {
    min?: number;
    xs?: number;
    sm?: number;
    md?: number;
    lg?: number;
    xl?: number;
    xl2?: number;
    xl3?: number;
    xl4?: number;
}

static interface LayoutGridInput extends Omit<Marko.HTML.Div, `on${string}`> {
    item?: Marko.AttrTag<Marko.Renderable>
    columns?: LayoutOptions
}

export interface Input extends WithNormalizedProps<LayoutGridInput> {}

$ const {
    item: items = [],
    class: inputClass,
    columns = {},
    ...htmlInput
} = input;

<div class=["layout-grid", inputClass]
    data-columns-min=columns.min
    data-columns-xs=columns.xs
    data-columns-sm=columns.sm
    data-columns-md=columns.md
    data-columns-lg=columns.lg
    data-columns-xl=columns.xl
    data-columns-xl2=columns.xl2
    data-columns-xl3=columns.xl3
    data-columns-xl4=columns.xl4
>
    <ul ...processHtmlAttributes(htmlInput)>
        <for|item| of=items>
            <li>
                <${item}/>
            </li>
        </for>
    </ul>
</div>

import { processHtmlAttributes } from "../../common/html-attributes";
static var validDensity = ["compact", "relaxed"];

export function getSelectionState(input: Input) {
    if (input.selectionState) {
        return input.selectionState;
    }
    let selectedCount = 0;
    let rowCount = 0;
    if (input.row) {
        for (const [_name, { selected }] of Object.entries([...input.row])) {
            if (selected) {
                selectedCount++;
            }
            rowCount++;
        }
    }
    if (selectedCount === 0) {
        return "none-selected";
    }
    if (selectedCount === rowCount) {
        return "all-selected";
    }
    return "indeterminate";
}

$ function getSelectionAttrTriState(input: Input) {
    const selectionState = getSelectionState(input);
    return selectionState === "all-selected"
        ? "true"
        : selectionState === "indeterminate"
          ? "mixed"
          : "false";
}

$ const {
    class: divClass,
    density,
    header: headers,
    row: rows,
    selectionState,
    a11ySelectAllText,
    a11ySelectRowText,
    mode = "none",
    ...divInput
} = input;

<div
    ...processHtmlAttributes(divInput)
    class=[
        "table",
        mode === "selection" && "table--mode-selection",
        density &&
            validDensity.includes(density) &&
            `table--density-${density}`,
        divClass,
    ]
    role="group"
    tabindex="0"
>
    <table>
        <thead>
            <tr>
                <if(mode === "selection")>
                    <th class="table__cell">
                        <ebay-tri-state-checkbox
                            aria-label=(a11ySelectAllText ?? "Select all rows")
                            checked=getSelectionAttrTriState(input)
                            on-change("headerSelect")
                        />
                    </th>
                </if>
                <for|header| of=headers>
                    $ const {
                        columnType = "normal",
                        class: thClass,
                        renderBody,
                        ...thInput
                    } = header;
                    <th
                        ...processHtmlAttributes(thInput)
                        class=[
                            "table__cell",
                            columnType === "numeric" && "table__cell--numeric",
                            thClass,
                        ]
                    >
                        <${renderBody}/>
                    </th>
                </for>
            </tr>
        </thead>
        <tbody>
            <for|row, rowIndex| of=rows || []>
                $ const {
                    cell: cells,
                    name = rowIndex,
                    selected,
                    ...trInput
                } = row;
                <tr ...processHtmlAttributes(trInput)>
                    <if(mode === "selection")>
                        <td class="table__cell">
                            <ebay-checkbox
                                aria-label=(a11ySelectRowText ?? "Select row")
                                checked=selected
                                on-change("rowSelect", name)
                            />
                        </td>
                    </if>
                    <for|header, index| of=headers>
                        $ const cell = (
                            Array.isArray(cells) ? cells[index] : cells
                        );
                        <if(cell)>
                            $ const {
                                class: tdClass,
                                renderBody,
                                ...tdInput
                            } = cell;
                            $ const cellBaseClass = [
                                "table__cell",
                                header.columnType === "numeric" &&
                                    "table__cell--numeric",
                            ];
                            <${header.columnType === "row-header" ? "th" : "td"}
                                ...processHtmlAttributes(tdInput)
                                class=[cellBaseClass, tdClass]
                            >
                                <${renderBody}/>
                            </>
                        </if>
                    </for>
                </tr>
            </for>
        </tbody>
    </table>
</div>

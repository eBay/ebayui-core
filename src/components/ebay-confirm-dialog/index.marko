import type { Input as BaseInput } from "<ebay-dialog-base>";
static interface ConfirmDialogInput extends Omit<BaseInput, `on${string}`> {
    "reject-text"?: string;
    "confirm-text"?: string;
    "on-open"?: () => void;
    "on-reject"?: () => void;
    "on-confirm"?: () => void;
    "confirm-cta-variant"?: typeof validConfirmCTAVariants[number];
}

export interface Input extends WithNormalizedProps<ConfirmDialogInput> {}

$ var cancelId = component.getElId("confirm-dialog-cancel");
$ var confirmId = component.getElId("confirm-dialog-confirm");
$ var mainId = component.getElId("confirm-dialog-main");
static  var validConfirmCTAVariants = [
    "destructive"
];

$ const { confirmCtaVariant, ...dialogInput } = input;
<ebay-dialog-base
    ...dialogInput
    open=input.open
    on-open("emit", "open")
    on-close("emit", "reject")
    main-id=mainId
    focus=confirmId
    class-prefix="confirm-dialog"
    class=[input.class, "confirm-dialog--mask-fade"]
    window-class=["confirm-dialog__window--fade"]
    button-position="hidden">
    <@footer>
        <ebay-button
            on-click("emit", "reject")
            id=cancelId
            class="confirm-dialog__reject">
            ${input.rejectText}
        </ebay-button>
        <ebay-button
            priority="primary"
            on-click("emit", "confirm")
            id=confirmId
            aria-describedby=mainId
            class=[
                "confirm-dialog__confirm",
                confirmCtaVariant && validConfirmCTAVariants.includes(confirmCtaVariant) && `btn--${confirmCtaVariant}`
            ]>
            ${input.confirmText}
        </ebay-button>
    </@footer>
</ebay-dialog-base>

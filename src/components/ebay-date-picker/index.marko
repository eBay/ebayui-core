// @ts-check

/**
 * @typedef {import("./component.js").Input} Input
 */

import { floorDay, getMonthWithOffset } from "./component.js"


$ const today = floorDay(input.today ?? new Date());
$ const numActiveMonths = 2; // should be figured out between 2 and 1 based on page width
$ const locale = input.locale ?? navigator.language;
$ const isRange = input.range ?? false;

$ const titleFormatter = new Intl.DateTimeFormat(locale, {
    month: 'long',
    year: 'numeric',
})

$ const visibleMonths = [...Array(numActiveMonths)].map(
    (_, i) => getMonthWithOffset(today, state.offset + i)
);

<div.date-picker>
    <div.date-picker__header>
        <div.date-picker__header--inner>
            <ebay-icon-button
                transparent size="small"
                aria-label="TODO"
                onClick('onPrevious')>
                <ebay-chevron-left-icon/>
            </ebay-icon-button>
            <for|month| of=visibleMonths>
                <h3>${titleFormatter.format(month)}</h3>
            </for>
            <ebay-icon-button
                transparent size="small"
                aria-label="TODO"
                onClick('onNext')>
                <ebay-chevron-right-icon/>
            </ebay-icon-button>
        </div>
    </div>
    <div.date-picker__body>
        <for|month| of=visibleMonths>
            <div.date-picker__calendar-cell>
                <ebay-calendar
                    key=`month-${month.getTime()}`
                    interactive
                    date=month
                    locale=locale
                    today=today
                    isRange=isRange
                    firstSelected=state.firstSelected
                    secondSelected=state.secondSelected
                    focusDate=state.focusDate
                    tabindexDate=state.tabindexDate

                    onSelect("onDaySelect")
                    onFocus("onDayFocus")
                    onBlur("onDayBlur")
                    onKeydown("onKeyDown")
                />
            </div>
        </for>
    </div>
</div>

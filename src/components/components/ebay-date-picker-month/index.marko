import {
    getMonthDisplayName,
    findVisibleRange,
    generateDateGrid,
    getDayLabelFormatter,
} from './component.js';
$ const dayLabelFormatter = getDayLabelFormatter(input);
$ const displayName = getMonthDisplayName(input);
$ const { showRange, rangeStart, rangeEnd } = findVisibleRange(input);
$ const dateGrid = generateDateGrid(input);

<div.date-picker__month>
    <h3>${displayName}</h3>
    <div role='grid' aria-label=displayName>
        <if(input.weekdayLabels)>
            <div role='row'>
                <for|label| of=input.weekdayLabels>
                    <div.date-picker__day-label role='columnheader'>${label}</div>
                </for>
            </div>
        </if>

        <for|row| of=dateGrid>
            <div role='row'>
                <for|date| of=row>
                    <if(date === undefined)>
                        <div.date-picker__day--empty/>
                    </if>
                    <else>
                        $ const timestamp = date.getTime();
                        <div.date-picker__day
                            role='gridcell'
                            class=[
                                timestamp === input.today.getTime() && 'date-picker__day--today',
                                showRange &&
                                    timestamp === rangeStart.getTime() &&
                                    'date-picker__day--start',
                                showRange &&
                                    date >= rangeStart &&
                                    date <= rangeEnd &&
                                    'date-picker__day--range',
                                showRange &&
                                    timestamp === rangeEnd.getTime() &&
                                    'date-picker__day--end',
                            ]
                        >
                            <button
                                type='button'
                                aria-label=dayLabelFormatter.format(date)
                                aria-selected=(
                                    (
                                        (input.firstSelected && timestamp === input.firstSelected.getTime()) ||
                                        (input.secondSelected && timestamp === input.secondSelected.getTime())
                                    ) && 'true')
                                onClick('onDaySelect', date)
                                onFocus('onDayFocus', date)
                                onMouseOver('onDayFocus', date)
                                onBlur('onDayBlur')
                                onMouseOut('onDayBlur')
                            >
                                ${date.getDate()}
                            </button>
                        </div>
                    </else>
                </for>
            </div>
        </for>
    </div>
</div>

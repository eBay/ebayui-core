import processHtmlAttributes from "../../../common/html-attributes"

static const isBrowser = typeof window !== "undefined";

static var ignoredAttributes = [
    "open",
    "type",
    "classPrefix",
    "focus",
    "a11yCloseText",
    "windowClass",
    "baseEl",
    "header",
    "footer",
    "transitionEl",
    "isModal",
    "closeButton",
    "ignoreEscape",
    "windowType",
    "mainId",
    "ariaLabelledby",
    "buttonPosition",
    "useHiddenProperty",
    "position"
];

static var ignoredHeaderAttributes = ["id", "as"];

$ var buttonPosition = input.buttonPosition || "left";
$ var baseEl = input.baseEl || "div";
$ var header = input.header;
<macro name="header-content">
    <${header.as || "h2"}
        ...processHtmlAttributes(header, ignoredHeaderAttributes)
        id=(header.id || component.getElId("dialog-title"))>
        <${header.renderBody}/>
    </>
</macro>
<macro name="button-content">
    <if(buttonPosition !== "hidden")>
        <button
            key="close"
            class=['icon-btn', `${input.classPrefix}__close`]
            type="button"
            aria-label=input.a11yCloseText
            onClick("handleCloseButtonClick")>
            <if (input.closeButton)>
                <${input.closeButton}/>
            </if>
            <else>
                <ebay-close-icon/>
            </else>
        </button>
    </if>
</macro>

<${baseEl}
    ...processHtmlAttributes(input, ignoredAttributes)
    aria-labelledby=(input.ariaLabelledby || (input.header && component.getElId("dialog-title")))
    aria-modal="true"
    role=(input.role || "dialog")
    class=[input.classPrefix, input.class]
    hidden:no-update=!state.open
    aria-live=(!input.isModal && "polite")
    onClick("handleDialogClick")
    onMousedown("handleStartClick")>
    <if(state.open && isBrowser && !input.ignoreEscape)>
        <subscribe to=document on-keydown("handleKeydown")/>
    </if>
    <if(!state.open && isBrowser)>
        <subscribe to=window on-click("trackLastClick") />
    </if>
    <div
        key="window"
        class=[
            input.windowType
                ? `${input.classPrefix}__${input.windowType}-window`
                : `${input.classPrefix}__window`,
            input.windowClass
        ]>
        <if(input.top)>
            <${input.top.renderBody}/>
        </if>
        <div class=`${input.classPrefix}__header`>
            <if(header && buttonPosition === "right")>
                <header-content/>
            </if>
            <if(buttonPosition !== "bottom")>
                <button-content/>
            </if>
            <if(
                header &&
                (buttonPosition === "left" || buttonPosition === "hidden")
            )>
                <header-content/>
            </if>
        </>
        <div id=input.mainId class=`${input.classPrefix}__main`  key="body" onScroll("handleScroll")>
            <${input.renderBody}/>
        </div>
        <if(input.footer || buttonPosition === "bottom")>
            <div class=`${input.classPrefix}__footer`>
                <${input.footer && input.footer.renderBody}/>
                <if(buttonPosition === "bottom")>
                    <button-content/>
                </if>
            </div>
        </if>
    </div>
</>

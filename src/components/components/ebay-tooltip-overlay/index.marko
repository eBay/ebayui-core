import { processHtmlAttributes } from "../../../common/html-attributes";
import { typeRoles } from "./component-browser";

static function noop() {}
static var ignoredHeaderAttributes = ["id", "as", "class"];

$ input.toJSON = noop;
$ var heading = input.heading;

<span
    id=input.id
    class=`${input.type}__overlay`
    role=typeRoles[input.type]
    aria-labelledby=(
        input.type === "tourtip" &&
        heading &&
        component.elId("tourtip-label")
    )
    >
    <span class=`${input.type}__pointer`/>
    <span class=`${input.type}__mask`>
        <span class=`${input.type}__cell`>
            <span class=`${input.type}__content`>
                <if(heading)>
                    <${heading.as || "span"}
                        ...processHtmlAttributes(heading, ignoredHeaderAttributes)
                        class=[`${input.type}__heading`, input.heading?.class]
                        id:scoped="tourtip-label">
                        <${heading.renderBody}/>
                    </>
                </if>
                <if(input.content)>
                    <${Object.keys(input.content).length > 1 && "span"}
                        ...processHtmlAttributes(input.content)>
                        <${input.content.renderBody}/>
                    </>
                </if>
            </span>
            <if(input.type !== "tooltip")>
                <button
                    aria-label=input.a11yCloseText
                    class=['icon-btn', 'icon-btn--transparent', `${input.type}__close`]
                    type="button"
                    onClick("handleCloseButton")>
                    <ebay-close-16-icon/>
                </button>
            </if>
            <if (input.footer)>
                <span class=[`${input.type}__footer`, input.footer.class]>
                    <${input.footer}/>
                </span>
            </if>
        </span>
    </span>
</span>

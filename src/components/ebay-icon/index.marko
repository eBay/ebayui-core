import { processHtmlAttributes } from "../../common/html-attributes"

static function noop() {}

static var isBrowser = typeof window !== "undefined";

static var browserLookup = {};

static var ignoredAttributes = ["_name", "_type", "noSkinClasses", "_themes", "toJSON"];

static function getIconClass(type, name) {
    if (type === "icon") {
        return `icon icon--${name}`;
    } else {
        var dashedName = name.replace(type, `${type}-`);
        return `${type} ${dashedName}`
    }

}

$ var noTitle = input.a11yVariant === "label";
$ input.toJSON = noop;
$ var lookup = isBrowser ? browserLookup : out.global;
$ {
    var a11yAttributes = input.a11yText
        ? { role: "img" }
        : { "aria-hidden": "true" };
    var prefixSvg = input._type === "icon" ? "icon-" : "";
}
<svg
    ...a11yAttributes
    ...processHtmlAttributes(input, ignoredAttributes)
    class=[input.class, !input.noSkinClasses && getIconClass(input._type, input._name)]
    focusable="false"
    aria-labelledby=(input.a11yText && !noTitle && component.elId("text"))
    aria-label=(noTitle && input.a11yText)>
    <!-- Here we check if we should render the inline svg symbol. -->
    <!-- Server side we store a flag in `out.global` to check if the symbol was rendered. -->
    <!-- Client side we check the `browserLookup` object to see if the symbol is already present in root svg. -->
    $ var themes = input._themes;
    $ var lookupName = "rendered_ebay_icon_" + input._name;
    $ var renderDefs = !lookup[lookupName];
    $ lookup[lookupName] = true;
    <if(renderDefs && themes)>
        <defs key="defs">
            <if(!isBrowser)>
                $ var lassoContext = out.global["lasso/LassoRenderContext"];
                $ {
                    var flags =
                                        lassoContext &&
                                        lassoContext.data &&
                                        lassoContext.data.config &&
                                        lassoContext.data.config.flags;
                }
                $!{themes()}
            </if>
        </defs>
    </if>
    <if(input.a11yText && !noTitle)>
        <title id:scoped="text">${input.a11yText}</title>
    </if>
    <use xlink:href=`#${prefixSvg}${input._name}`/>
</svg>

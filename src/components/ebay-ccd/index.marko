import { processHtmlAttributes } from "../../common/html-attributes";
import type { WithNormalizedProps } from "../../global";
static interface CCDInput extends Omit<Marko.HTML.Div, `on${string}`> {
    max?: string;
    min?: string;
    "charger-icon"?: "included" | "not-included";
    units?: string;
    "secondary-type"?: string;
    "secondary-text"?: string;
    "a11y-units"?: string;
    "a11y-text"?: string;
}
export interface Input extends WithNormalizedProps<CCDInput> {}
static function noop() {}
$ const {
    class: inputClass,
    style,
    a11yText,
    chargerIcon,
    units = "W",
    a11yUnits = "watts",
    max,
    min,
    secondaryType = "none",
    secondaryText = "USB PD",
    ...htmlInput
} = input;
$ (input as any).toJSON = noop;

$ {
     const hasFastCharging = secondaryType === "usbpd";
     const a11yCharger = `${
        chargerIcon
            ? `Charger ${chargerIcon === "included" ? "" : "not "}included.`
            : ""
        } `.trim();
    const a11yFigure = min || max ? `${min} - ${max} ${a11yUnits}. ${hasFastCharging ? secondaryText : ""}` : ''.trim();
    const a11yCombined = `${a11yCharger} ${a11yFigure}`.trim();
}

<div
    ...processHtmlAttributes(htmlInput)
    role="figure"
    style=style
    aria-label=a11yText || a11yCombined
        class=["ccd", inputClass]
>
    <if(chargerIcon === "included")>
        <ebay-ccd-charger-included-icon class="ccd__charger-icon"/>
    </if>
    <else-if(chargerIcon === "not-included")>
        <ebay-ccd-charger-not-included-icon class="ccd__charger-icon"/>
    </else-if>
    <if (min || max)>
        <div class="ccd__description-figure">
            <ebay-ccd-top-icon class="ccd__top-icon"/>
            <div class="ccd__body">
                <div>${min} - ${max}</div>
                <div>${units}</div>
                <if(hasFastCharging)>
                    <div>${secondaryText}</div>
                </if>
            </div>
        </div>
    </if>
</div>

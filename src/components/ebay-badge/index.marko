import { processHtmlAttributes } from "../../common/html-attributes";
import type { AttrClass } from "marko/tags-html";

static interface BadgeInput extends Marko.Input<"span"> {
    type?: "menu" | "icon";
    number?: number | string;
    class?: AttrClass;
}

export interface Input extends WithNormalizedProps<BadgeInput> {}

static var ignoredAttributes = ["type", "number"];
$ var number = Math.round(+(input.number ?? NaN));

<if(number > 0)>
    <span
        ...processHtmlAttributes(input, ignoredAttributes)
        role=(input.type !== "menu" && input.type !== "icon" && "img")
        class=["badge", input.class]>
        ${number > 99 ? "99+" : number}
    </span>
</if>

// @ts-check
import {toISO} from "./component"

$ const numMonths = input.numMonths || 1;
$ const monthDates = [...Array(numMonths)].map((_, i) => component.getMonthDate(state.offset + i));
$ const getShowMonthText = input.getA11yShowMonthText ?? ((month) => `Show ${month}`);
/**
 * @param {{selected: boolean, rangeStart: boolean, inRange: boolean, rangeEnd: boolean, today: boolean, disabled: boolean}} info
 */
static function defaultBuildA11yCellText(info) {
    const parts = [""];
    if (info.selected) parts.push("selected");
    if (info.rangeStart) parts.push("start of range");
    if (info.rangeEnd) parts.push("end of range");
    if (!info.rangeStart && !info.rangeEnd && info.inRange) parts.push("in range");
    if (info.today) parts.push("today");
    if (info.disabled) parts.push("inactive");
    return parts.join(" - ");
}
$ const buildA11yCellText = input.buildA11yCellText ?? defaultBuildA11yCellText;

<div.calendar>
    <if(input.navigable)>
        <div.calendar__header>
            <div.calendar__header--inner>
                <ebay-icon-button
                    transparent
                    size="small"
                    disabled=(state.disableBefore && component.getFirstVisibleISO() <= state.disableBefore)
                    aria-label=getShowMonthText(component.monthTitle(component.getMonthDate(state.offset - 1)))
                    onClick('prevMonth')>
                    <ebay-chevron-left-24-icon/>
                </ebay-icon-button>
                <for|monthDate| of=monthDates>
                    <h3>${component.monthTitle(monthDate)}</h3>
                </for>
                <ebay-icon-button
                    transparent
                    size="small"
                    disabled=(state.disableAfter && component.getLastVisibleISO() >= state.disableAfter)
                    aria-label=getShowMonthText(component.monthTitle(component.getMonthDate(state.offset + numMonths)))
                    onClick('nextMonth')>
                    <ebay-chevron-right-24-icon/>
                </ebay-icon-button>
            </div>
        </div>
    </if>
    <div.calendar__body>
        <for|monthDate| of=monthDates>
            <div.calendar__month>
                <table onKeydown('onKeyDown')>
                    <caption>${component.monthTitle(monthDate)}</caption>
                    <thead>
                        <tr>
                            <for|dayName| of=state.weekdayLabels>
                                <th>${dayName}</th>
                            </for>
                        </tr>
                    </thead>
                    <tbody>
                        $ const numBlankDays = (monthDate.getDay() - state.firstDayOfWeek + 7) % 7;
                        $ const year = monthDate.getFullYear();
                        $ const month = monthDate.getMonth();
                        $ const daysInMonth = new Date(year, month + 1, 0).getDate();
                        <for|row| from=0 to=Math.floor((numBlankDays + daysInMonth) / 7)>
                            <tr>
                                $ let startDate = row * 7 - numBlankDays + 1;
                                $ let endDate = startDate + 6;
                                <if(row === 0 && numBlankDays !== 0)>
                                    <td colspan=numBlankDays/>
                                    $ startDate = 1;
                                </if>
                                <else-if(endDate > daysInMonth)>
                                    $ endDate = daysInMonth;
                                </else-if>
                                <for|day| from=startDate to=endDate>
                                    $ const dayISO = toISO(new Date(year, month, day));
                                    $ const isToday = dayISO === state.todayISO;
                                    $ const isSelected = (Array.isArray(input.selected)
                                            ? input.selected.some((iso) => iso === dayISO)
                                            : input.selected && input.selected === dayISO);
                                    $ const isRangeStart = dayISO === state.rangeStart;
                                    $ const isInRange = component.isInRange(dayISO);
                                    $ const isRangeEnd = dayISO === state.rangeEnd;
                                    $ const isDisabled = component.isDisabled(dayISO);
                                    $ const a11yText = buildA11yCellText({
                                        selected: isSelected,
                                        rangeStart: isRangeStart,
                                        inRange: isInRange,
                                        rangeEnd: isRangeEnd,
                                        today: !input.interactive && isToday,
                                        disabled: !input.interactive && isDisabled,
                                    });
                                    <td class={
                                            "calendar__cell--selected": isSelected,
                                            "calendar__range--start": isRangeStart,
                                            "calendar__range": isInRange,
                                            "calendar__range--end": isRangeEnd,
                                        }>
                                        <if(input.interactive)>
                                            <button
                                                key=dayISO
                                                disabled=isDisabled
                                                aria-label=a11yText && `${day}${a11yText}`
                                                tabindex=state.tabindexISO !== dayISO && -1
                                                aria-current=isToday && "date"
                                                onClick('onDaySelect', dayISO)
                                                onFocus('onDayFocus', dayISO)
                                                onMouseover('onDayFocus', dayISO)
                                                onBlur('onDayBlur')
                                                onMouseout('onDayBlur')>
                                                ${day}
                                            </button>
                                        </if>
                                        <else>
                                            <span class={
                                                    "calendar__cell--disabled": isDisabled,
                                                    "calendar__cell--current": isToday,
                                                }>
                                                ${day}<if(a11yText)><span.clipped>${a11yText}</span></if>
                                            </span>
                                        </else>
                                    </td>
                                </for>
                            </tr>
                        </for>
                    </tbody>
                </table>
            </div>
        </for>
    </div>
</div>

{"version":3,"file":"index.2c18e3c5.js","sources":["../../node_modules/makeup-typeahead/dist/mjs/index.js","../../src/components/ebay-menu/component.js","../../src/components/ebay-menu/index.marko"],"sourcesContent":["function src_default() {\n  let timeout;\n  let typeStr = \"\";\n  return {\n    getIndex: function(nodeList, char, timeoutLength) {\n      typeStr = typeStr.concat(char);\n      let index;\n      if (nodeList == null)\n        return -1;\n      const lowerTypeStr = typeStr.toLocaleLowerCase();\n      index = [...nodeList].findIndex((el) => el.textContent.toLocaleLowerCase().startsWith(lowerTypeStr));\n      if (index === -1) {\n        index = [...nodeList].findIndex((el) => el.textContent.toLocaleLowerCase().includes(lowerTypeStr));\n      }\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      setTimeout(() => {\n        clearTimeout(timeout);\n        typeStr = \"\";\n      }, timeoutLength);\n      return index;\n    },\n    destroy: function() {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    }\n  };\n}\nexport {\n  src_default as default\n};\n","import * as scrollKeyPreventer from \"makeup-prevent-scroll-keys\";\nimport { createLinear } from \"makeup-roving-tabindex\";\nimport typeahead from \"makeup-typeahead\";\nimport * as eventUtils from \"../../common/event-utils\";\nimport menuUtils from \"../../common/menu-utils\";\n\nconst TYPEAHEAD_TIMEOUT_LENGTH = 1300;\n\nexport default Object.assign({}, menuUtils, {\n    toggleItemChecked(index, originalEvent, itemEl) {\n        // This needs to be at start since toggleChecked swaps the checkedIndex\n        // and then the right events will not fire correctly\n        const shouldEmitRadio =\n            this.isRadio() && index !== this.state.checkedIndex;\n        this.toggleChecked(index);\n\n        if (shouldEmitRadio) {\n            this.emitComponentEvent({\n                index,\n                eventType: \"change\",\n                el: itemEl,\n                originalEvent,\n            });\n        } else if (this.type !== \"radio\") {\n            this.emitComponentEvent({\n                index,\n                eventType: !this.type ? \"select\" : \"change\",\n                el: itemEl,\n                originalEvent,\n            });\n        }\n\n        if (this.rovingTabindex) {\n            this.tabindexPosition = this.rovingTabindex.items.findIndex(\n                (el) => el.tabIndex === 0\n            );\n        }\n    },\n\n    handleItemClick(index, originalEvent, itemEl) {\n        this.toggleItemChecked(index, originalEvent, itemEl);\n    },\n\n    handleItemKeydown(index, originalEvent, itemEl) {\n        eventUtils.handleEscapeKeydown(originalEvent, () => {\n            this.emitComponentEvent({\n                eventType: \"keydown\",\n                originalEvent,\n                index,\n            });\n        });\n\n        eventUtils.handleActionKeydown(originalEvent, () =>\n            this.toggleItemChecked(index, originalEvent, itemEl)\n        );\n    },\n\n    handleItemKeypress({ key }) {\n        const itemIndex = this.getTypeaheadIndex(\n            this.getEl(\"menu\").children,\n            key,\n            this.input.typeaheadTimeoutLength || TYPEAHEAD_TIMEOUT_LENGTH\n        );\n\n        if (itemIndex !== -1) {\n            this.tabindexPosition = this.rovingTabindex.index = itemIndex;\n        }\n    },\n\n    emitComponentEvent({ eventType, el, originalEvent, index }) {\n        const checkedIndexes = this.getCheckedIndexes();\n        const isCheckbox = this.type === \"checkbox\";\n\n        const eventObj = {\n            el,\n            originalEvent,\n        };\n\n        if (isCheckbox && checkedIndexes.length > 1) {\n            Object.assign(eventObj, {\n                index,\n                indexes: this.getCheckedIndexes(), // DEPRECATED in v5\n                checked: this.getCheckedIndexes(), // DEPRECATED in v5 (keep but change from indexes to values)\n                checkedValues: this.getCheckedValues(), // DEPRECATED in v5\n            });\n        } else if (isCheckbox || this.isRadio()) {\n            Object.assign(eventObj, {\n                index, // DEPRECATED in v5\n                checked: this.getCheckedIndexes(), // DEPRECATED in v5 (keep but change from indexes to values)\n                checkedValues: this.getCheckedValues(), // DEPRECATED in v5\n            });\n        } else {\n            Object.assign(eventObj, {\n                index, // DEPRECATED in v5\n                checked: [index], // DEPRECATED in v5 (keep but change from indexes to values)\n            });\n        }\n\n        this.emit(`${eventType}`, eventObj);\n    },\n\n    onInput(input) {\n        this.state = this.getInputState(input);\n    },\n\n    onRender() {\n        if (typeof window !== \"undefined\") {\n            this._cleanupMakeup();\n        }\n    },\n\n    onMount() {\n        this.tabindexPosition = 0;\n        this._setupMakeup();\n    },\n\n    onUpdate() {\n        this._setupMakeup();\n    },\n\n    onDestroy() {\n        this._cleanupMakeup();\n    },\n\n    _setupMakeup() {\n        this.contentEl = this.getEl(\"menu\");\n\n        this.rovingTabindex = createLinear(this.contentEl, \"div\", {\n            index: this.tabindexPosition,\n            autoReset: null,\n        });\n\n        scrollKeyPreventer.add(this.contentEl);\n\n        const { getIndex: getTypeaheadIndex, destroy: destroyTypeahead } =\n            typeahead();\n        this.getTypeaheadIndex = getTypeaheadIndex;\n        this.destroyTypeahead = destroyTypeahead;\n    },\n\n    _cleanupMakeup() {\n        if (this.rovingTabindex) {\n            this.rovingTabindex.destroy();\n            scrollKeyPreventer.remove(this.contentEl);\n        }\n        if (this.destroyTypeahead) {\n            this.destroyTypeahead();\n        }\n    },\n});\n","import { processHtmlAttributes } from \"../../common/html-attributes\"\n\nstatic {\n    var ignoredAttributes = [\n        \"class\",\n        \"style\",\n        \"classPrefix\",\n        \"type\",\n        \"reverse\",\n        \"fixWidth\",\n        \"items\"\n    ];\n    var itemIgnoredAttributes = [\n        \"class\",\n        \"style\",\n        \"value\",\n        \"checked\",\n        \"badgeNumber\",\n        \"badgeAriaLabel\"\n    ];\n}\n\n$ var isRadio = input.type === \"radio\";\n$ var isCheckbox = input.type === \"checkbox\";\n$ var isNotCheckable = input.type !== \"checkbox\" && input.type !== \"radio\";\n$ var baseClass = input.classPrefix || \"menu\";\n$ var separatorMap = component.getSeparatorMap(input);\n<span\n    ...processHtmlAttributes(input, ignoredAttributes)\n    class=[\n        input.classPrefix\n            ? `${baseClass}__menu`\n            : \"menu\",\n        input.reverse && `${baseClass}__menu--reverse`,\n        input.fixWidth && `${baseClass}__menu--fix-width`,\n        input.class\n    ]\n    style=input.style>\n    <div\n        role=\"menu\"\n        class=`${baseClass}__items`\n        key=\"menu\"\n        id:scoped=\"menu\">\n        <for|item, index| of=(component.items)>\n            $ {\n                var itemRole = isRadio\n                                ? \"menuitemradio\"\n                                : isCheckbox\n                                ? \"menuitemcheckbox\"\n                                : \"menuitem\";\n                var checked = component.isChecked(index);\n            }\n            <if (separatorMap[index])>\n                <hr class=`${baseClass}__separator` role=\"separator\" />\n            </if>\n            <div\n                ...processHtmlAttributes(item, itemIgnoredAttributes)\n                class=[`${baseClass}__item`, item.class, item.badgeNumber && `${baseClass}__item--badged`]\n                style=item.style\n                aria-checked=(!isNotCheckable && (checked ? \"true\" : \"false\"))\n                aria-disabled=(item.disabled && \"true\")\n                href=(item.disabled ? null : item.href)\n                role=itemRole\n                onClick(!item.disabled && \"handleItemClick\", index)\n                onKeydown(!item.disabled && \"handleItemKeydown\", index)\n                onKeypress(!item.disabled && \"handleItemKeypress\")\n                key=\"item[]\">\n                <span>\n                    <${item.renderBody}/>\n                    <if(item.badgeNumber)>\n                        <ebay-badge type=\"menu\" number=item.badgeNumber/>\n                    </if>\n                </span>\n                <ebay-tick-16-icon />\n            </div>\n        </for>\n    </div>\n</span>\n"],"names":["src_default","timeout","typeStr","nodeList","char","timeoutLength","index","lowerTypeStr","el","TYPEAHEAD_TIMEOUT_LENGTH","_marko_component","menuUtils","originalEvent","itemEl","shouldEmitRadio","eventUtils.handleEscapeKeydown","eventUtils.handleActionKeydown","key","itemIndex","eventType","checkedIndexes","isCheckbox","eventObj","input","createLinear","scrollKeyPreventer.add","getTypeaheadIndex","destroyTypeahead","typeahead","scrollKeyPreventer.remove","ignoredAttributes","itemIgnoredAttributes","_marko_registerComponent","_marko_componentType","_marko_template","_marko_component2","_","_marko_renderer","out","_componentDef","_component","state","$global","isRadio","type","isNotCheckable","baseClass","classPrefix","separatorMap","getSeparatorMap","be","_marko_merge_attrs","processHtmlAttributes","_marko_class_merge","concat","reverse","fixWidth","class","_marko_style_merge","style","elId","_index","item","items","_keyScope","itemRole","checked","isChecked","e","badgeNumber","disabled","href","d","_marko_dynamic_tag","renderBody","_marko_tag","_ebayBadge","ee","_ebayTick16Icon","t","Component","_marko_defineComponent"],"mappings":"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"}
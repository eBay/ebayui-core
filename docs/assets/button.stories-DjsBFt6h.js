import{t as f}from"./index-CCz6reEH.js";import{b as h,a as x}from"./utils-DWCsNc5l.js";import{_ as u}from"./index-lGJzrljb.js";import{r as T,b as E,d as _,t as v}from"./registry-Cc025Aii.js";import{_ as B}from"./render-tag-BBOJ9dEX.js";/* empty css               */import"./index-Te3tZzU0.js";import"./index-AHRB2UQ1.js";import"./index-BH_jsMDn.js";/* empty css             */import"./dynamic-tag-BtS2B08A.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-C_hIc2w0.js";import"./index-blmbJU0z.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";const w=`<h1 style="display: flex; justify-content: space-between; align-items: center;">
    <span>
        ebay-button
    </span>
    <span style="font-weight: normal; font-size: medium; margin-bottom: -15px;">
        DS v1.1.0
    </span>
</h1>

Button styled with core classes.

## Examples and Documentation

-   [Storybook](https://ebay.github.io/ebayui-core/?path=/story/buttons-ebay-button)
-   [Storybook Docs](https://ebay.github.io/ebayui-core/?path=/docs/buttons-ebay-button)
-   [Code Examples](https://github.com/eBay/ebayui-core/tree/master/src/components/ebay-button/examples)
`,r="a9sEBe+j",t=v(r);T.r(r,()=>t);const c={};t._=E(function(o,m,y,b,S,O){B(u,{bodyState:"expand",variant:"form",...o,renderBody:g=>{g.t("Button",b)}},m,y,"0")},{t:r,i:!0},c);t.Component=_(c,t._);const V=`<ebay-button bodyState="expand" variant="form" ...input>
    Button
</ebay-button>
`,k=o=>({input:x(o)}),M={title:"buttons/ebay-button",component:u,parameters:{docs:{description:{component:w}}},argTypes:{renderBody:{},href:{description:"url for link behaviour (switches to anchor tag)"},size:{options:["large","regular","small"],description:"",table:{defaultValue:{summary:"none"}},type:{category:"Options"}},priority:{options:["primary","secondary","tertiary","none"],description:"",table:{defaultValue:{summary:"secondary"}},type:{category:"Options"}},fluid:{description:"button fills 100% width of container",table:{category:"Toggles",defaultValue:{summary:"false"}}},borderless:{description:"Shows button without border.",table:{category:"Toggles",defaultValue:{summary:"false"}}},bodyState:{description:"when state is loading, adds progress spinner. when user interacts with button, reset should be called to reset aria-live state. default is none",options:["none","loading","reset","expand"],control:{type:"select"},table:{defaultValue:{summary:"none"}},type:{category:"Options"}},a11yText:{description:"aria label for button when bodyState === loading",table:{defaultValue:""},control:{type:"text"},type:{category:"Options"}},disabled:{description:"",table:{category:"Toggles",defaultValue:{summary:"false"}}},variant:{options:["standard","destructive","form"],description:"transforms to a specific variant that styles in conjunction with priority",table:{defaultValue:{summary:"standard"}},type:{category:"Options"}},partiallyDisabled:{description:"programmatically disabled, but remains keyboard focusable",table:{defaultValue:{summary:"false"},category:"Toggles"}},transparent:{description:"transparent background color (overrides `priority` setting)",table:{defaultValue:{summary:"false"},category:"Toggles"}},fixedHeight:{description:"fixes the height based on `size`",table:{defaultValue:{summary:"false"},category:"Toggles"}},truncate:{description:"used in conjunction with `fixedHeight`; truncates text to single line with ellipsis when text overflows",table:{defaultValue:{summary:"false"},category:"Toggles"}},onClick:{action:"on-click",description:"Triggered on click",table:{category:"Events",defaultValue:{summary:"{ originalEvent }"}}},onEscape:{action:"on-escape",description:"Triggered on escape key",table:{category:"Events",defaultValue:{summary:"{ originalEvent }"}}},onFocus:{action:"on-focus",description:"Triggered on focus",table:{category:"Events",defaultValue:{summary:"{ originalEvent }"}}},onBlur:{action:"on-blur",description:"Triggered on blur",table:{category:"Events",defaultValue:{summary:"{ originalEvent }"}}},spread:{control:{type:"object"},description:"Additional attributes being passed to component",table:{category:"Other"}}}},e=k.bind({});e.args={renderBody:"Button",href:"",fluid:!1,borderless:!1,size:null,disabled:!1,priority:null,partiallyDisabled:!1,transparent:!1,fixedHeight:!1,truncate:!1};e.parameters={docs:{source:{code:f("ebay-button",e.args)}}};const a=h(t,V);var n,s,i;e.parameters={...e.parameters,docs:{...(n=e.parameters)==null?void 0:n.docs,source:{originalSource:`args => ({
  input: addRenderBodies(args)
})`,...(i=(s=e.parameters)==null?void 0:s.docs)==null?void 0:i.source}}};var l,d,p;a.parameters={...a.parameters,docs:{...(l=a.parameters)==null?void 0:l.docs,source:{originalSource:"buildExtensionTemplate(ExpandButtonTemplate, ExpandButtonTemplateCode)",...(p=(d=a.parameters)==null?void 0:d.docs)==null?void 0:p.source}}};const N=["Standard","ExpandButton"];export{a as ExpandButton,e as Standard,N as __namedExportsOrder,M as default};

import{b as B,a as A}from"./utils-DWCsNc5l.js";import{t as x}from"./index-CCz6reEH.js";import{C as M}from"./index-9LWFq08O.js";import{r as v,b as G,d as w,t as L}from"./registry-DoALHDDx.js";import{i as E,r as N}from"./attr-tag-DphMQldM.js";import{_ as R}from"./render-tag-BBOJ9dEX.js";/* empty css                    *//* empty css                       */import"./dynamic-tag-B1GLaPEW.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-BgASIJEW.js";import"./index-mP6JM4Am.js";/* empty css             */import"./index-CFzZ_T8n.js";import"./index-BUA-308i.js";import"./index-Ku187Omj.js";import"./index-D7GlLQHj.js";import"./index-DvIcBlTc.js";import"./index-D7B88Psz.js";import"./index--35j0Bzx.js";import"./index-blmbJU0z.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";const P=`<h1 style="display: flex; justify-content: space-between; align-items: center;">
    <span>
        ebay-combobox
    </span>
    <span style="font-weight: normal; font-size: medium; margin-bottom: -15px;">
        DS v2.0.0
    </span>
</h1>

The \`<ebay-combobox>\` is a combination of a text \`<input>\`, and a listbox (\`aria-role="listbox"\`). It supports both written text by the user, as well as text selected from the listbox options.

## Examples and Documentation

-   [Storybook](https://ebay.github.io/ebayui-core/?path=/story/form-input-ebay-combobox)
-   [Storybook Docs](https://ebay.github.io/ebayui-core/?path=/docs/form-input-ebay-combobox)
-   [Code Examples](https://github.com/eBay/ebayui-core/tree/master/src/components/ebay-combobox/examples)
`,l=[{name:"Afghanistan",code:"AF"},{name:"Ã…landIslands",code:"AX"},{name:"Albania",code:"AL"},{name:"Algeria",code:"DZ"},{name:"AmericanSamoa",code:"AS"},{name:"AndorrA",code:"AD"},{name:"Angola",code:"AO"},{name:"Anguilla",code:"AI"},{name:"Antarctica",code:"AQ"},{name:"Antiguaand Barbuda",code:"AG"},{name:"Argentina",code:"AR"},{name:"Armenia",code:"AM"},{name:"Aruba",code:"AW"},{name:"Australia",code:"AU"},{name:"Austria",code:"AT"},{name:"Azerbaijan",code:"AZ"},{name:"Bahamas",code:"BS"},{name:"Bahrain",code:"BH"},{name:"Bangladesh",code:"BD"},{name:"Barbados",code:"BB"},{name:"Belarus",code:"BY"},{name:"Belgium",code:"BE"},{name:"Belize",code:"BZ"},{name:"Benin",code:"BJ"},{name:"Bermuda",code:"BM"},{name:"Bhutan",code:"BT"},{name:"Bolivia",code:"BO"},{name:"Bosniaand Herzegovina",code:"BA"},{name:"Botswana",code:"BW"},{name:"BouvetIsland",code:"BV"},{name:"Brazil",code:"BR"},{name:"BritishIndian Ocean Territory",code:"IO"},{name:"BruneiDarussalam",code:"BN"},{name:"Bulgaria",code:"BG"},{name:"BurkinaFaso",code:"BF"},{name:"Burundi",code:"BI"},{name:"Cambodia",code:"KH"},{name:"Cameroon",code:"CM"},{name:"Canada",code:"CA"},{name:"CapeVerde",code:"CV"},{name:"CaymanIslands",code:"KY"},{name:"CentralAfrican Republic",code:"CF"},{name:"Chad",code:"TD"},{name:"Chile",code:"CL"},{name:"China",code:"CN"},{name:"ChristmasIsland",code:"CX"},{name:"Cocos(Keeling) Islands",code:"CC"},{name:"Colombia",code:"CO"},{name:"Comoros",code:"KM"},{name:"Congo",code:"CG"},{name:"Congo The Democratic Republic of the",code:"CD"},{name:"CookIslands",code:"CK"},{name:"CostaRica",code:"CR"},{name:"CoteD'Ivoire",code:"CI"},{name:"Croatia",code:"HR"},{name:"Cuba",code:"CU"},{name:"Cyprus",code:"CY"},{name:"CzechRepublic",code:"CZ"},{name:"Denmark",code:"DK"},{name:"Djibouti",code:"DJ"},{name:"Dominica",code:"DM"},{name:"DominicanRepublic",code:"DO"},{name:"Ecuador",code:"EC"},{name:"Egypt",code:"EG"},{name:"ElSalvador",code:"SV"},{name:"EquatorialGuinea",code:"GQ"},{name:"Eritrea",code:"ER"},{name:"Estonia",code:"EE"},{name:"Ethiopia",code:"ET"},{name:"FalklandIslands (Malvinas)",code:"FK"},{name:"FaroeIslands",code:"FO"},{name:"Fiji",code:"FJ"},{name:"Finland",code:"FI"},{name:"France",code:"FR"},{name:"FrenchGuiana",code:"GF"},{name:"FrenchPolynesia",code:"PF"},{name:"FrenchSouthern Territories",code:"TF"},{name:"Gabon",code:"GA"},{name:"Gambia",code:"GM"},{name:"Georgia",code:"GE"},{name:"Germany",code:"DE"},{name:"Ghana",code:"GH"},{name:"Gibraltar",code:"GI"},{name:"Greece",code:"GR"},{name:"Greenland",code:"GL"},{name:"Grenada",code:"GD"},{name:"Guadeloupe",code:"GP"},{name:"Guam",code:"GU"},{name:"Guatemala",code:"GT"},{name:"Guernsey",code:"GG"},{name:"Guinea",code:"GN"},{name:"GuineaBissau",code:"GW"},{name:"Guyana",code:"GY"},{name:"Haiti",code:"HT"},{name:"HeardIsland and Mcdonald Islands",code:"HM"},{name:"HolySee (Vatican City State)",code:"VA"},{name:"Honduras",code:"HN"},{name:"HongKong",code:"HK"},{name:"Hungary",code:"HU"},{name:"Iceland",code:"IS"},{name:"India",code:"IN"},{name:"Indonesia",code:"ID"},{name:"Iran Islamic Republic Of",code:"IR"},{name:"Iraq",code:"IQ"},{name:"Ireland",code:"IE"},{name:"Isleof Man",code:"IM"},{name:"Israel",code:"IL"},{name:"Italy",code:"IT"},{name:"Jamaica",code:"JM"},{name:"Japan",code:"JP"},{name:"Jersey",code:"JE"},{name:"Jordan",code:"JO"},{name:"Kazakhstan",code:"KZ"},{name:"Kenya",code:"KE"},{name:"Kiribati",code:"KI"},{name:"Korea Democratic People'S Republic of",code:"KP"},{name:"Korea Republic of",code:"KR"},{name:"Kuwait",code:"KW"},{name:"Kyrgyzstan",code:"KG"},{name:"LaoPeopleS Democratic Republic",code:"LA"},{name:"Latvia",code:"LV"},{name:"Lebanon",code:"LB"},{name:"Lesotho",code:"LS"},{name:"Liberia",code:"LR"},{name:"LibyanArab Jamahiriya",code:"LY"},{name:"Liechtenstein",code:"LI"},{name:"Lithuania",code:"LT"},{name:"Luxembourg",code:"LU"},{name:"Macao",code:"MO"},{name:"Macedonia The Former Yugoslav Republic of",code:"MK"},{name:"Madagascar",code:"MG"},{name:"Malawi",code:"MW"},{name:"Malaysia",code:"MY"},{name:"Maldives",code:"MV"},{name:"Mali",code:"ML"},{name:"Malta",code:"MT"},{name:"MarshallIslands",code:"MH"},{name:"Martinique",code:"MQ"},{name:"Mauritania",code:"MR"},{name:"Mauritius",code:"MU"},{name:"Mayotte",code:"YT"},{name:"Mexico",code:"MX"},{name:"Micronesia Federated States of",code:"FM"},{name:"Moldova Republic of",code:"MD"},{name:"Monaco",code:"MC"},{name:"Mongolia",code:"MN"},{name:"Montserrat",code:"MS"},{name:"Morocco",code:"MA"},{name:"Mozambique",code:"MZ"},{name:"Myanmar",code:"MM"},{name:"Namibia",code:"NA"},{name:"Nauru",code:"NR"},{name:"Nepal",code:"NP"},{name:"Netherlands",code:"NL"},{name:"NetherlandsAntilles",code:"AN"},{name:"NewCaledonia",code:"NC"},{name:"NewZealand",code:"NZ"},{name:"Nicaragua",code:"NI"},{name:"Niger",code:"NE"},{name:"Nigeria",code:"NG"},{name:"Niue",code:"NU"},{name:"NorfolkIsland",code:"NF"},{name:"NorthernMariana Islands",code:"MP"},{name:"Norway",code:"NO"},{name:"Oman",code:"OM"},{name:"Pakistan",code:"PK"},{name:"Palau",code:"PW"},{name:"PalestinianTerritory Occupied",code:"PS"},{name:"Panama",code:"PA"},{name:"PapuaNew Guinea",code:"PG"},{name:"Paraguay",code:"PY"},{name:"Peru",code:"PE"},{name:"Philippines",code:"PH"},{name:"Pitcairn",code:"PN"},{name:"Poland",code:"PL"},{name:"Portugal",code:"PT"},{name:"PuertoRico",code:"PR"},{name:"Qatar",code:"QA"},{name:"Reunion",code:"RE"},{name:"Romania",code:"RO"},{name:"RussianFederation",code:"RU"},{name:"RWANDA",code:"RW"},{name:"SaintHelena",code:"SH"},{name:"SaintKitts and Nevis",code:"KN"},{name:"SaintLucia",code:"LC"},{name:"SaintPierre and Miquelon",code:"PM"},{name:"SaintVincent and the Grenadines",code:"VC"},{name:"Samoa",code:"WS"},{name:"SanMarino",code:"SM"},{name:"SaoTome and Principe",code:"ST"},{name:"SaudiArabia",code:"SA"},{name:"Senegal",code:"SN"},{name:"Serbiaand Montenegro",code:"CS"},{name:"Seychelles",code:"SC"},{name:"SierraLeone",code:"SL"},{name:"Singapore",code:"SG"},{name:"Slovakia",code:"SK"},{name:"Slovenia",code:"SI"},{name:"SolomonIslands",code:"SB"},{name:"Somalia",code:"SO"},{name:"SouthAfrica",code:"ZA"},{name:"SouthGeorgia and the South Sandwich Islands",code:"GS"},{name:"Spain",code:"ES"},{name:"SriLanka",code:"LK"},{name:"Sudan",code:"SD"},{name:"Suriname",code:"SR"},{name:"Svalbardand Jan Mayen",code:"SJ"},{name:"Swaziland",code:"SZ"},{name:"Sweden",code:"SE"},{name:"Switzerland",code:"CH"},{name:"SyrianArab Republic",code:"SY"},{name:"Taiwan Province of China",code:"TW"},{name:"Tajikistan",code:"TJ"},{name:"Tanzania United Republic of",code:"TZ"},{name:"Thailand",code:"TH"},{name:"TimorLeste",code:"TL"},{name:"Togo",code:"TG"},{name:"Tokelau",code:"TK"},{name:"Tonga",code:"TO"},{name:"Trinidadand Tobago",code:"TT"},{name:"Tunisia",code:"TN"},{name:"Turkey",code:"TR"},{name:"Turkmenistan",code:"TM"},{name:"Turksand Caicos Islands",code:"TC"},{name:"Tuvalu",code:"TV"},{name:"Uganda",code:"UG"},{name:"Ukraine",code:"UA"},{name:"UnitedArab Emirates",code:"AE"},{name:"UnitedKingdom",code:"GB"},{name:"United States",code:"US"},{name:"United States Minor Outlying Islands",code:"UM"},{name:"Uruguay",code:"UY"},{name:"Uzbekistan",code:"UZ"},{name:"Vanuatu",code:"VU"},{name:"Venezuela",code:"VE"},{name:"VietNam",code:"VN"},{name:"VirginIslands British",code:"VG"},{name:"VirginIslands U.S.",code:"VI"},{name:"Wallisand Futuna",code:"WF"},{name:"WesternSahara",code:"EH"},{name:"Yemen",code:"YE"},{name:"Zambia",code:"ZM"},{name:"Zimbabwe",code:"ZW"}],s="R7m3T9Fv",t=L(s);v.r(s,()=>t);const T={onCreate(){this.state={options:l,autocompleteOption:"none",value:""}},async inputChange({currentInputValue:e},{el:i,index:c,selected:m}){this.state.autocompleteOption="none",this.state.value=e;const n=await this.searchCountry(e);this.state.options=n,this.state.autocompleteOption="list"},async searchCountry(e){return new Promise(i=>{clearTimeout(this.timeout),this.timeout=setTimeout(()=>{const c=l.filter(m=>m.name.toLowerCase().startsWith(e.toLowerCase())).slice(0,10);i(c)},500)})},selected(e){console.log("selected",e)}};t._=G(function(e,i,c,m,n,O){R(M,E(()=>{for(const r of n.options||[])N("options",{dataId:r.code,text:r.name})},{...e,name:"example2text",autocomplete:n.autocompleteOption,value:n.value,options:void 0}),i,c,"0",[["input-change","inputChange",!1],["select","selected",!1]])},{t:s},T);t.Component=w(T,t._);const F=`import countryList from './data.json';
class {
    onCreate() {
        this.state = {
            options: countryList,
            autocompleteOption: 'none',
            value: '',
        };
    }
    async inputChange({ currentInputValue }, { el, index, selected }) {
        this.state.autocompleteOption = 'none';
        this.state.value = currentInputValue;
        const options = await this.searchCountry(currentInputValue);
        this.state.options = options;
        this.state.autocompleteOption = 'list';
    }

    async searchCountry(currentInputValue) {
        return new Promise((resolve) => {
            clearTimeout(this.timeout);
            this.timeout = setTimeout(() => {
                const filtered = countryList
                    .filter((country) =>
                        country.name.toLowerCase().startsWith(currentInputValue.toLowerCase())
                    )
                    .slice(0, 10);
                resolve(filtered);
            }, 500);
        });
    }
    selected(el) {
        console.log('selected', el);
    }
}

<ebay-combobox
    ...input
    name='example2text'
    autocomplete=state.autocompleteOption
    value=state.value
    on-input-change('inputChange')
    on-select('selected')
>
    <for|option| of=state.options>
        <@option data-id=option.code text=option.name/>
    </for>
</ebay-combobox>
`,I=e=>({input:A(e)}),ie={title:"form input/ebay-combobox",component:M,parameters:{docs:{description:{component:P}}},argTypes:{name:{control:{type:"text"},description:"used for the `name` attribute of the `<input>` element"},borderless:{type:"boolean",control:{type:"boolean"},description:"whether button has borders "},disabled:{type:"boolean",control:{type:"boolean"},description:"sets the disabled attribute of the input"},expanded:{control:{type:"boolean"},description:"sets whether the listbox is expanded"},autocomplete:{control:{type:"text"},description:"default is `none`; available values are `none` or `list`. For list, will automatically filter results while typing."},listSelection:{control:{type:"text"},description:"default is `automatic`; available values are `automatic`, `manual`. If set to automatic will automatically fill in the input with the currently highlighted item when using the up/down keys."},roledescription:{control:{type:"text"},description:"The role description for accessibility. Default text is set and will be in english. Pass this to override for different locales"},"floating-label":{control:{type:"text"},description:"The label to show on the combobox which moves up when focused"},fluid:{control:{type:"boolean"},type:"boolean",description:"If true, combobox will span the entire width of it's container"},option:{name:"@option",table:{category:"@attribute tags"}},text:{description:"string to use in the option",control:{type:"text"},table:{category:"@option attributes"}},sticky:{control:{type:"boolean"},type:"boolean",table:{category:"@option attributes"},description:"If true, the option will always be shown even if it does not match the filter"},onCollapse:{action:"on-collapse",table:{category:"Events"},description:" collapsed content"},onExpand:{action:"on-expand",table:{category:"Events"},description:" expanded content"},onChange:{action:"on-change",table:{category:"Events",defaultValue:{summary:"{ el, index, selected }"}},description:"same as the `onChange` event, which fires on blur"},"onInput-change":{action:"on-input-change",table:{category:"Events",defaultValue:{summary:"{ el, index, selected }"}},description:"same as the `onInput` event, which fires with every keypress"},onSelect:{action:"on-select",table:{category:"Events",defaultValue:{summary:"{ el, index, selected }"}},description:"similar to a `<select>`, which fires when an option is clicked or selected"},"onFloating-label-init":{action:"on-floating-label-init",table:{category:"Events",defaultValue:{summary:"{ el, index, selected }"}},description:"when floating label finishes initializing"},onFocus:{action:"on-focus",table:{category:"Events",defaultValue:{summary:"{ el, index, selected }"}},description:"same as the `onFocus` event, which fires on focus"}}},a=I.bind({});a.args={name:"example1text",autocomplete:"list",value:"",options:[{text:"August Campaign"},{text:"4th of July Sale (paused)"},{text:"Basic Offer"},{text:"Basic Offer 2"},{text:"Basic Offer 3"},{text:"Basic Offer 4"}],floatingLabel:"Default Label"};a.parameters={docs:{source:{code:x("ebay-combobox",a.args,{options:"option"})}},expanded:{table:{category:"disabled"}}};const o=I.bind({});o.args={name:"example1text",autocomplete:"list",options:[{text:"August Campaign",value:"1"},{text:"4th of July Sale (paused)",value:"2"},{text:"Basic Offer",value:"3"},{text:"Basic Offer 2",value:"4"},{text:"Basic Offer 3",value:"5"},{text:"Basic Offer 4",value:"6"}]};o.parameters={docs:{source:{code:x("ebay-combobox",o.args,{options:"option"})}},expanded:{table:{category:"disabled"}}};const d=B(t,F);var u,p,b;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,source:{originalSource:`args => ({
  input: addRenderBodies(args)
})`,...(b=(p=a.parameters)==null?void 0:p.docs)==null?void 0:b.source}}};var h,y,g;o.parameters={...o.parameters,docs:{...(h=o.parameters)==null?void 0:h.docs,source:{originalSource:`args => ({
  input: addRenderBodies(args)
})`,...(g=(y=o.parameters)==null?void 0:y.docs)==null?void 0:g.source}}};var f,S,C;d.parameters={...d.parameters,docs:{...(f=d.parameters)==null?void 0:f.docs,source:{originalSource:"buildExtensionTemplate(SearchFilteringTemplate, SearchFilteringTemplateCode)",...(C=(S=d.parameters)==null?void 0:S.docs)==null?void 0:C.source}}};const ce=["FloatingLabel","Isolated","SearchFiltering"];export{a as FloatingLabel,o as Isolated,d as SearchFiltering,ce as __namedExportsOrder,ie as default};

import{b as L,a as $}from"./utils-44f5c40b.js";import{t as B}from"./index-a17a703b.js";import{t as w,r as M,_ as R,a as P}from"./registry-08dff688.js";import{_ as f}from"./index-c3b67474.js";import{_ as r}from"./render-tag-73fdbff3.js";import{_ as N}from"./index-d1af97f7.js";import{_ as z}from"./self-iterator-81a0b488.js";import{_ as j}from"./index-a879355c.js";import{d as x,t as W,C as G}from"./index-86a03489.js";import{s as F}from"./index-002669f7.js";import"./_commonjsHelpers-725317a4.js";import"./_commonjs-dynamic-modules-302442b1.js";/* empty css             *//* empty css                       *//* empty css                    */import"./dynamic-tag-bb62150b.js";import"./index-ecc6d169.js";import"./index-3f14fa50.js";import"./index-0b00b731.js";import"./index-4d4607bc.js";/* empty css               *//* empty css             */import"./index-dbe5ade1.js";import"./index-ad737ebd.js";import"./index-5f81e013.js";import"./index-6cab0bb0.js";const q=`<h1 style='display: flex; justify-content: space-between; align-items: center;'>
    <span>
        ebay-date-textbox
    </span>
    <span style='font-weight: normal; font-size: medium; margin-bottom: -15px;'>
        DS v1.2.0
    </span>
</h1>

Date textbox component, used as an alternative method for entering dates instead of \`<input type="date">\`.

## Examples and Documentation

-   [Storybook](https://ebay.github.io/ebayui-core/?path=/story/dialogs-ebay-date-textbox)
-   [Storybook Docs](https://ebay.github.io/ebayui-core/?path=/docs/dialogs-ebay-date-textbox)
-   [Code Examples](https://github.com/eBay/ebayui-core/tree/master/src/components/ebay-date-textbox/examples)
`;const H=600;class U extends Marko.Component{onCreate(){this.state={numMonths:1,firstSelected:null,secondSelected:null,popover:!1},this.calculateNumMonths()}onMount(){this.expander=new F(this.el,{hostSelector:".ebay-date-textbox--main > .icon-btn",contentSelector:".date-textbox__popover",expandOnClick:!0,autoCollapse:!0})}onDestroy(){this.expander&&this.expander.destroy()}onInput(t){t.value&&(this.state.firstSelected=x(t.value)),t.rangeEnd&&(this.state.secondSelected=x(t.rangeEnd)),t.range||(this.state.secondSelected=null)}calculateNumMonths(){typeof document>"u"||(this.state.numMonths=document.documentElement.clientWidth<H?1:2)}handleInputChange(t,{value:o}){const n=new Date(o),a=isNaN(n.getTime())?null:W(n);t===0?this.state.firstSelected=a:this.state.secondSelected=a,this.emitSelectedChange()}openPopover(){this.state.popover=!0}closePopover(){this.state.popover=!1}onPopoverSelect({iso:t}){const{firstSelected:o,secondSelected:n}=this.state;if(this.state.firstSelected=t,this.input.range){const a=o||n;o&&n?this.state.secondSelected=null:a&&(a<t?(this.state.firstSelected=a,this.state.secondSelected=t):this.state.secondSelected=a,this.input.collapseOnSelect&&(this.expander.expanded=!1))}else this.input.collapseOnSelect&&(this.expander.expanded=!1);this.emitSelectedChange()}emitSelectedChange(){this.emit("change",this.input.range?{rangeStart:this.state.firstSelected,rangeEnd:this.state.secondSelected}:{selected:this.state.firstSelected})}}const y="mSPRAI2e",d=w(y),I=d;M.r(y,()=>d);const C=U;d._=R(function(e,t,o,n,a,D){var s,p,m,u;const V=(s=e.a11yOpenPopoverText)!==null&&s!==void 0?s:"open calendar",b="YYYY-MM-DD",[O,Y]=Array.isArray(e.inputPlaceholderText)?e.inputPlaceholderText:[(p=e.inputPlaceholderText)!==null&&p!==void 0?p:b,(m=e.inputPlaceholderText)!==null&&m!==void 0?m:b];t.be("span",{class:"date-textbox"},"0",n,null,1,{"onexpander-expand":o.d("expander-expand","openPopover",!1),"onexpander-collapse":o.d("expander-collapse","closePopover",!1)}),e.range&&r(f,{placeholder:O,value:a.firstSelected},t,o,"1",[["blur","handleInputChange",!1,[0]]]),r(f,{class:"ebay-date-textbox--main",placeholder:Y,buttonAriaLabel:V,value:e.range?a.secondSelected:a.firstSelected,postfixIcon:{renderBody:A=>{r(N,{},A,o,"3")},[Symbol.iterator]:z}},t,o,"2",[["blur","handleInputChange",!1,[e.range?1:0]]]),t.be("div",{hidden:!a.popover,class:"date-textbox__popover"},"@popover",n,null,0),a.popover&&r(j,{to:typeof window=="object"&&window,__events:["on","resize"]},t,o,"4",[["resize","calculateNumMonths",!1]]),r(G,{interactive:!0,navigable:!0,range:e.range,numMonths:a.numMonths,selected:a.firstSelected&&a.secondSelected?[a.firstSelected,a.secondSelected]:(u=a.firstSelected)!==null&&u!==void 0?u:a.secondSelected,locale:e.locale,disableBefore:e.disableBefore,disableAfter:e.disableAfter,disableList:e.disableList,disableWeekdays:e.disableWeekdays,getA11yShowMonthText:e.getA11yShowMonthText,a11ySelectedText:e.a11ySelectedText,a11yRangeStartText:e.a11yRangeStartText,a11yInRangeText:e.a11yInRangeText,a11yRangeEndText:e.a11yRangeEndText,a11ySeparator:e.a11ySeparator},t,o,"5",[["select","onPopoverSelect",!1]]),t.ee(),t.ee()},{t:y},C);d.Component=P(C,d._);const h="l2ccq64P",i=w(h);M.r(h,()=>i);const E={};i._=R(function(e,t,o,n,a,D){r(I,{disableBefore:new Date,range:!0,locale:"af",getA11yShowMonthText:s=>"Gaan na ".concat(s),a11ySelectedText:"Geselekteerde",a11yRangeStartText:"Reeks begin",a11yInRangeText:"Binne bereik",a11yRangeEndText:"Reeks einde"},t,o,"0",[["change","emit",!1,["change"]]])},{t:h,i:!0},E);i.Component=P(E,i._);const J=`<ebay-date-textbox
    disableBefore=new Date()
    range
    locale="af"
    getA11yShowMonthText=(monthName) => \`Gaan na \${monthName}\`
    a11ySelectedText="Geselekteerde"
    a11yRangeStartText="Reeks begin"
    a11yInRangeText="Binne bereik"
    a11yRangeEndText="Reeks einde"
    on-change("emit", "change")/>
`,K=e=>({input:$(e)}),ve={title:"form input/ebay-date-textbox",component:I,parameters:{docs:{description:{component:q}}},argTypes:{value:{type:"date",control:{type:"date"},description:"Selected date",table:{defaultValue:{summary:"undefined"}}},range:{type:"boolean",control:{type:"boolean"},description:"True if selecting a range, false if a single value",table:{defaultValue:{summary:"false"}}},rangeEnd:{type:"date",control:{type:"date"},description:"If range is true, the end of the selected range",table:{defaultValue:{summary:"undefined"}}},locale:{type:"text",control:{type:"text"},description:"Locale of the date picker",table:{defaultValue:{summary:"navigator.language"}}},disableBefore:{type:"date",control:{type:"date"},description:"First date that may be selected. Should be an ISO string, but also accepts a timestamp or `Date` object",table:{defaultValue:{summary:"undefined"}}},disableAfter:{type:"date",control:{type:"date"},description:"Last date that may be selected. Should be an ISO string, but also accepts a timestamp or `Date` object",table:{defaultValue:{summary:"undefined"}}},disableWeekdays:{type:"array",control:{type:"array"},description:"List of weekdays that are disabled. Must be an array of numbers, where Sunday is `0` and Saturday is `6`",table:{defaultValue:{summary:"undefined"}}},disableList:{type:"array",control:{type:"array"},description:"List of specific days that are disabled. Should be a list of ISO strings, but also accepts timestamps or `Date` objects",table:{defaultValue:{summary:"undefined"}}},collapseOnSelect:{type:"boolean",control:{type:"boolean"},description:"Whether the calendar should collapse after a date is selected",table:{defaultValue:{summary:"false"}}},getA11yShowMonthText:{type:"callback",control:{type:"callback"},description:"Function used to get the text for showing previous and next months",table:{defaultValue:{summary:"(monthName) => `Show ${monthName}`"}}},a11ySelectedText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is selected",table:{defaultValue:{summary:"selected"}}},a11yRangeStartText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is the start of a range",table:{defaultValue:{summary:"start of range"}}},a11yInRangeText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is in a range",table:{defaultValue:{summary:"in range"}}},a11yRangeEndText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is the end of a range",table:{defaultValue:{summary:"end of range"}}},a11ySeparator:{type:"text",control:{type:"text"},description:"Text to be read by screen readers to separate properties",table:{defaultValue:{summary:" - "}}},a11yOpenPopoverText:{type:"text",control:{type:"text"},description:"A11y label for the button that opens the calendar popover",table:{defaultValue:{summary:"open calendar"}}},inputPlaceholderText:{type:"text|array",control:{type:"object"},description:'Text for the input placeholder. Should indicate that users need to enter dates in ISO format. If separate placeholders are required for a range display, use an array of two strings (i. e. `["Start (YYYY-MM-DD)", "End (YYYY-MM-DD)"]`).',table:{defaultValue:{summary:'"YYYY-MM-DD"'}}},onChange:{action:"on-change",description:"Triggered when the selection changes",table:{category:"Events",defaultValue:{summary:"{ selected } | { rangeStart, rangeEnd }"}}}}},l=K.bind({});l.parameters={docs:{source:{code:B("ebay-date-textbox",{})}}};const c=L(i,J);var g,S,T;l.parameters={...l.parameters,docs:{...(g=l.parameters)==null?void 0:g.docs,source:{originalSource:`args => ({
  input: addRenderBodies(args)
})`,...(T=(S=l.parameters)==null?void 0:S.docs)==null?void 0:T.source}}};var _,v,k;c.parameters={...c.parameters,docs:{...(_=c.parameters)==null?void 0:_.docs,source:{originalSource:"buildExtensionTemplate(LocalizedTemplate, LocalizedTemplateCode)",...(k=(v=c.parameters)==null?void 0:v.docs)==null?void 0:k.source}}};const ke=["Default","Localized"];export{l as Default,c as Localized,ke as __namedExportsOrder,ve as default};
//# sourceMappingURL=date-textbox.stories-d5f58bcf.js.map

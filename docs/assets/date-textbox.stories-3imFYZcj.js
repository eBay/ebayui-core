import{b as P,a as L}from"./utils-NX-dnf4r.js";import{t as A}from"./index-iqhZMf16.js";import{t as v,r as k,b as w,d as M}from"./registry-EgEQwbXk.js";import{C as h}from"./index-sBGH0_81.js";import{_ as n}from"./render-tag-_0PNNh6Y.js";import{_ as N}from"./index-7ai6Tro4.js";import{_ as B}from"./self-iterator-6yU_KG2T.js";import{_ as $}from"./index-VGoHc-V3.js";import{d as b,t as z,_ as j}from"./index-Izv3N7xY.js";import{s as G}from"./index-l3FQEXUN.js";import"./_commonjsHelpers-5-cIlDoe.js";import"./_commonjs-dynamic-modules-h-SxKiO4.js";/* empty css             *//* empty css                       *//* empty css                    */import"./dynamic-tag-7vXwaVzE.js";import"./index-4ijq5S5t.js";import"./index-eucXA0ea.js";import"./index-n6QElCwz.js";import"./index-yXTMSeKK.js";/* empty css               *//* empty css             */import"./index-bom_fu3A.js";import"./index--8xUDD5P.js";import"./index-QGVtTfuc.js";import"./index-ERL0bCNR.js";const W=`<h1 style='display: flex; justify-content: space-between; align-items: center;'>
    <span>
        ebay-date-textbox
    </span>
    <span style='font-weight: normal; font-size: medium; margin-bottom: -15px;'>
        DS v1.2.0
    </span>
</h1>

Date textbox component, used as an alternative method for entering dates instead of \`<input type="date">\`.

## Examples and Documentation

-   [Storybook](https://ebay.github.io/ebayui-core/?path=/story/dialogs-ebay-date-textbox)
-   [Storybook Docs](https://ebay.github.io/ebayui-core/?path=/docs/dialogs-ebay-date-textbox)
-   [Code Examples](https://github.com/eBay/ebayui-core/tree/master/src/components/ebay-date-textbox/examples)
`,F=600;class q extends Marko.Component{onCreate(){this.state={numMonths:1,firstSelected:null,secondSelected:null,popover:!1},typeof document<"u"&&this.calculateNumMonths()}onMount(){this.expander=new G(this.el,{hostSelector:".ebay-date-textbox--main > .icon-btn",contentSelector:".date-textbox__popover",expandOnClick:!0,autoCollapse:!0})}onDestroy(){var e;(e=this.expander)==null||e.destroy()}onInput(e){e.value&&(this.state.firstSelected=b(e.value)),e.rangeEnd&&(this.state.secondSelected=b(e.rangeEnd)),e.range||(this.state.secondSelected=null)}calculateNumMonths(){this.state.numMonths=document.documentElement.clientWidth<F?1:2}handleInputChange(e,{value:a}){const o=new Date(a),t=isNaN(o.getTime())?null:z(o);e===0?this.state.firstSelected=t:this.state.secondSelected=t,this.emitSelectedChange()}openPopover(){this.state.popover=!0}closePopover(){this.state.popover=!1}onPopoverSelect({iso:e}){const{firstSelected:a,secondSelected:o}=this.state;if(this.state.firstSelected=e,this.input.range){const t=a||o;a&&o?this.state.secondSelected=null:t&&(t<e?(this.state.firstSelected=t,this.state.secondSelected=e):this.state.secondSelected=t,this.input.collapseOnSelect&&(this.expander.expanded=!1))}else this.input.collapseOnSelect&&(this.expander.expanded=!1);this.emitSelectedChange()}emitSelectedChange(){this.emit("change",this.input.range?{rangeStart:this.state.firstSelected,rangeEnd:this.state.secondSelected}:{selected:this.state.firstSelected})}}const u="mSPRAI2e",l=v(u),C=l;k.r(u,()=>l);const I=q;l._=w(function(r,e,a,o,t,E){const{a11yOpenPopoverText:m="open calendar",range:i,inputPlaceholderText:c="YYYY-MM-DD",...R}=r,[V,Y]=Array.isArray(c)?c:[c,c];e.be("span",{class:"date-textbox"},"0",o,null,1,{"onexpander-expand":a.d("expander-expand","openPopover",!1),"onexpander-collapse":a.d("expander-collapse","closePopover",!1)}),i&&n(h,{placeholder:V,value:t.firstSelected},e,a,"1",[["blur","handleInputChange",!1,[0]]]),n(h,{class:"ebay-date-textbox--main",placeholder:Y,buttonAriaLabel:m,value:i?t.secondSelected:t.firstSelected,postfixIcon:{renderBody:O=>{n(N,{},O,a,"3")},[Symbol.iterator]:B}},e,a,"2",[["blur","handleInputChange",!1,[i?1:0]]]),e.be("div",{hidden:!t.popover,class:"date-textbox__popover"},"@popover",o,null,0),t.popover&&n($,{to:typeof window=="object"&&window,__events:["on","resize"]},e,a,"4",[["resize","calculateNumMonths",!1]]),n(j,{...R,range:i,interactive:!0,navigable:!0,numMonths:t.numMonths,selected:t.firstSelected&&t.secondSelected?[t.firstSelected,t.secondSelected]:t.firstSelected||t.secondSelected||void 0},e,a,"5",[["select","onPopoverSelect",!1]]),e.ee(),e.ee()},{t:u},I);l.Component=M(I,l._);const y="l2ccq64P",d=v(y);k.r(y,()=>d);const D={};d._=w(function(r,e,a,o,t,E){n(C,{disableBefore:new Date,range:!0,locale:"af",getA11yShowMonthText:m=>`Gaan na ${m}`,a11ySelectedText:"Geselekteerde",a11yRangeStartText:"Reeks begin",a11yInRangeText:"Binne bereik",a11yRangeEndText:"Reeks einde"},e,a,"0",[["change","emit",!1,["change"]]])},{t:y,i:!0},D);d.Component=M(D,d._);const H=`<ebay-date-textbox
    disableBefore=new Date()
    range
    locale="af"
    getA11yShowMonthText=(monthName) => \`Gaan na \${monthName}\`
    a11ySelectedText="Geselekteerde"
    a11yRangeStartText="Reeks begin"
    a11yInRangeText="Binne bereik"
    a11yRangeEndText="Reeks einde"
    on-change("emit", "change")/>
`,U=r=>({input:L(r)}),_e={title:"form input/ebay-date-textbox",component:C,parameters:{docs:{description:{component:W}}},argTypes:{value:{type:"date",control:{type:"date"},description:"Selected date",table:{defaultValue:{summary:"undefined"}}},range:{type:"boolean",control:{type:"boolean"},description:"True if selecting a range, false if a single value",table:{defaultValue:{summary:"false"}}},rangeEnd:{type:"date",control:{type:"date"},description:"If range is true, the end of the selected range",table:{defaultValue:{summary:"undefined"}}},locale:{type:"text",control:{type:"text"},description:"Locale of the date picker",table:{defaultValue:{summary:"navigator.language"}}},disableBefore:{type:"date",control:{type:"date"},description:"First date that may be selected. Should be an ISO string, but also accepts a timestamp or `Date` object",table:{defaultValue:{summary:"undefined"}}},disableAfter:{type:"date",control:{type:"date"},description:"Last date that may be selected. Should be an ISO string, but also accepts a timestamp or `Date` object",table:{defaultValue:{summary:"undefined"}}},disableWeekdays:{type:"array",control:{type:"array"},description:"List of weekdays that are disabled. Must be an array of numbers, where Sunday is `0` and Saturday is `6`",table:{defaultValue:{summary:"undefined"}}},disableList:{type:"array",control:{type:"array"},description:"List of specific days that are disabled. Should be a list of ISO strings, but also accepts timestamps or `Date` objects",table:{defaultValue:{summary:"undefined"}}},collapseOnSelect:{type:"boolean",control:{type:"boolean"},description:"Whether the calendar should collapse after a date is selected",table:{defaultValue:{summary:"false"}}},getA11yShowMonthText:{type:"callback",control:{type:"callback"},description:"Function used to get the text for showing previous and next months",table:{defaultValue:{summary:"(monthName) => `Show ${monthName}`"}}},a11ySelectedText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is selected",table:{defaultValue:{summary:"selected"}}},a11yRangeStartText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is the start of a range",table:{defaultValue:{summary:"start of range"}}},a11yInRangeText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is in a range",table:{defaultValue:{summary:"in range"}}},a11yRangeEndText:{type:"text",control:{type:"text"},description:"Text to be read by screen readers when a date is the end of a range",table:{defaultValue:{summary:"end of range"}}},a11ySeparator:{type:"text",control:{type:"text"},description:"Text to be read by screen readers to separate properties",table:{defaultValue:{summary:" - "}}},a11yOpenPopoverText:{type:"text",control:{type:"text"},description:"A11y label for the button that opens the calendar popover",table:{defaultValue:{summary:"open calendar"}}},inputPlaceholderText:{type:"text|array",control:{type:"object"},description:'Text for the input placeholder. Should indicate that users need to enter dates in ISO format. If separate placeholders are required for a range display, use an array of two strings (i. e. `["Start (YYYY-MM-DD)", "End (YYYY-MM-DD)"]`).',table:{defaultValue:{summary:'"YYYY-MM-DD"'}}},onChange:{action:"on-change",description:"Triggered when the selection changes",table:{category:"Events",defaultValue:{summary:"{ selected } | { rangeStart, rangeEnd }"}}}}},s=U.bind({});s.parameters={docs:{source:{code:A("ebay-date-textbox",{})}}};const p=P(d,H);var f,x,g;s.parameters={...s.parameters,docs:{...(f=s.parameters)==null?void 0:f.docs,source:{originalSource:`args => ({
  input: addRenderBodies(args)
})`,...(g=(x=s.parameters)==null?void 0:x.docs)==null?void 0:g.source}}};var S,_,T;p.parameters={...p.parameters,docs:{...(S=p.parameters)==null?void 0:S.docs,source:{originalSource:"buildExtensionTemplate(LocalizedTemplate, LocalizedTemplateCode)",...(T=(_=p.parameters)==null?void 0:_.docs)==null?void 0:T.source}}};const Te=["Default","Localized"];export{s as Default,p as Localized,Te as __namedExportsOrder,_e as default};

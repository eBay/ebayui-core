{"version":3,"file":"index-5be940c9.js","sources":["../../src/common/loader/index.js","../../src/common/cdn/index.js"],"sourcesContent":["const cachePromises = [];\n\nfunction cssLoad(cssSrc, promiseKey) {\n    return new Promise((resolve, reject) => {\n        const head = document.head || document.getElementsByTagName(\"head\")[0];\n        const cssnode = document.createElement(\"link\");\n        cssnode.type = \"text/css\";\n        cssnode.rel = \"stylesheet\";\n\n        cssnode.href = cssSrc;\n\n        cssnode.onreadystatechange = () => {\n            resolve();\n        };\n\n        cssnode.onload = () => {\n            resolve();\n        };\n        cssnode.onerror = () => {\n            reject();\n            delete cachePromises[promiseKey];\n        };\n        head.appendChild(cssnode);\n    });\n}\n\nfunction srcLoad(src, promiseKey, type) {\n    return new Promise((resolve, reject) => {\n        const head = document.head || document.getElementsByTagName(\"head\")[0];\n        const script = document.createElement(\"script\");\n        script.src = src;\n        if (type) {\n            script.type = type;\n        }\n\n        script.onload = () => {\n            resolve();\n        };\n        script.onerror = () => {\n            reject();\n            delete cachePromises[promiseKey];\n        };\n        head.appendChild(script);\n    });\n}\n\nfunction restArWorker(src) {\n    return new Promise((resolve) => {\n        const content = `importScripts( \"${src}\" );`;\n        const head = document.head || document.getElementsByTagName(\"head\")[0];\n        const script = document.createElement(\"noscript\");\n        script.textContent = content;\n        script.id = \"restar-worker\";\n\n        head.appendChild(script);\n        resolve();\n    });\n}\n\nfunction getPromise(typeList, promiseKey, src, key) {\n    if (typeList[key]) {\n        if (typeList[key] === \"css\") {\n            return cssLoad(src, promiseKey);\n        } else if (typeList[key] === \"restar-worker\") {\n            return restArWorker(src, promiseKey);\n        } else if (typeList[key] === \"module\") {\n            return srcLoad(src, promiseKey, \"module\");\n        }\n    }\n    return srcLoad(src, promiseKey);\n}\n\n/**\n * Loader, which loads a script or stylesheet. Will cache the results on the page so it does not load more than once.\n * @param {*} srcList Array of sources to load\n * @param {*} typeList The type of each src. Each index should match with srcList. See types for more info\n * @param {boolean} stagger If true, will wait for one source to load before loading the next.\n * @returns Promise, when resolved, all sources are loaded\n *\n * Types for typelist\n * src - standard javascript source (default value)\n * restar-worker - (deprecated), loads restar service worker\n * module - loads javascript script with type=module\n * css - CSS source file\n */\nfunction loader(srcList, typeList, stagger) {\n    const promiseKey = srcList.join(\",\");\n    if (!cachePromises[promiseKey]) {\n        if (stagger) {\n            // Make sure each file loading completes, before loading the next\n            cachePromises[promiseKey] = srcList.reduce(\n                (p, src, key) =>\n                    p.then(() => getPromise(typeList, promiseKey, src, key)),\n                Promise.resolve()\n            );\n        } else {\n            // Each can complete in any order\n            cachePromises[promiseKey] = Promise.all(\n                srcList.map((src, key) =>\n                    getPromise(typeList, promiseKey, src, key)\n                )\n            );\n        }\n    }\n    return cachePromises[promiseKey];\n}\n\nexport { loader };\n","import { loader } from \"../loader\";\nimport versions from \"./versions.json\";\nconst MAX_RETRIES = 3;\n\n/**\n * @config object with the following (all are required)\n * string key : the key to lookup both in versions and CDN url\n * [] files : The files to lookup in the CDN\n * [] types :  The Types of files for CDN loader (see common/loader)\n * function setLoaded(boolean) : sets the is loaded state\n * function handleSuccess() : when cdn is succsssfully loaded\n * function handleError(err) : when the cdn loading fails\n * boolean stagger :  (optional) if all promises should be staggered or executed in any order\n */\nexport class CDNLoader {\n    constructor(\n        self,\n        { key, files, types, setLoading, handleSuccess, handleError, stagger }\n    ) {\n        this.self = self;\n        this.retryTimes = 0;\n        this.setLoading = setLoading;\n        this.handleError = handleError;\n        this.handleSuccess = handleSuccess;\n        this.files = files;\n        this.types = types;\n        this.key = key;\n        this.stagger = stagger;\n        this._setFiles();\n    }\n\n    setOverrides(overrides, version) {\n        this._setFiles(overrides, version);\n\n        return this;\n    }\n\n    _setFiles(overrides, version) {\n        this.cdnFiles = [];\n        this.url = `https://ir.ebaystatic.com/cr/v/c1/ebayui/${this.key}/v${\n            version || versions[this.key]\n        }`;\n        for (let i = 0; i < this.files.length; i++) {\n            if (overrides && overrides[i]) {\n                this.cdnFiles[i] = overrides[i];\n            } else {\n                this.cdnFiles[i] = `${this.url}/${this.files[i]}`;\n            }\n        }\n    }\n\n    mount() {\n        this.isLoaded = false;\n\n        if (document.readyState === \"complete\") {\n            this.loadCDN();\n        } else {\n            this.self.subscribeTo(window).once(\"load\", this.loadCDN.bind(this));\n        }\n    }\n\n    loadCDN() {\n        const _timeout =\n            // eslint-disable-next-line compat/compat\n            window.requestIdleCallback ||\n            function (handler, arg) {\n                return setTimeout(() => {\n                    handler();\n                }, arg.timeout);\n            };\n\n        const _cancel =\n            window.cancelIdleCallback ||\n            function (id) {\n                clearTimeout(id);\n            };\n\n        this.retryTimes = 0;\n        this.setLoading(false);\n\n        _cancel(this.loadDelay);\n        this.setLoading(true);\n        this.loadDelay = _timeout(() => this._loadCDN(), { timeout: 100 });\n    }\n\n    _catchError(err) {\n        clearTimeout(this.retryTimeout);\n        this.retryTimes += 1;\n        if (this.retryTimes < MAX_RETRIES) {\n            this.retryTimeout = setTimeout(() => this._loadCDN(), 2000);\n        } else {\n            this.setLoading(false);\n            this.handleError(err);\n        }\n    }\n\n    _loadCDN() {\n        loader(this.cdnFiles, this.types, this.stagger)\n            .then(() => {\n                this.setLoading(false);\n                this.handleSuccess();\n            })\n            .catch((err) => {\n                this._catchError(err);\n            });\n    }\n}\n"],"names":["cachePromises","cssLoad","cssSrc","promiseKey","resolve","reject","head","cssnode","srcLoad","src","type","script","restArWorker","content","getPromise","typeList","key","loader","srcList","stagger","p","MAX_RETRIES","CDNLoader","self","files","types","setLoading","handleSuccess","handleError","overrides","version","versions","i","_timeout","handler","arg","_cancel","id","err"],"mappings":"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"}